[{"/home/e_tabidze/Documents/React-projects/project-ge-frontend/src/index.js":"1","/home/e_tabidze/Documents/React-projects/project-ge-frontend/src/reportWebVitals.js":"2","/home/e_tabidze/Documents/React-projects/project-ge-frontend/src/App.js":"3","/home/e_tabidze/Documents/React-projects/project-ge-frontend/src/Services/APIEndpoints.jsx":"4","/home/e_tabidze/Documents/React-projects/project-ge-frontend/src/Components/footer.jsx":"5","/home/e_tabidze/Documents/React-projects/project-ge-frontend/src/Components/navbar.jsx":"6","/home/e_tabidze/Documents/React-projects/project-ge-frontend/src/Pages/homePage.jsx":"7","/home/e_tabidze/Documents/React-projects/project-ge-frontend/src/Pages/userPage.jsx":"8","/home/e_tabidze/Documents/React-projects/project-ge-frontend/src/Pages/jewelPage.jsx":"9","/home/e_tabidze/Documents/React-projects/project-ge-frontend/src/Pages/terms.jsx":"10","/home/e_tabidze/Documents/React-projects/project-ge-frontend/src/Services/httpService.js":"11","/home/e_tabidze/Documents/React-projects/project-ge-frontend/src/Components/accountModal.jsx":"12","/home/e_tabidze/Documents/React-projects/project-ge-frontend/src/Components/dropdownMenu.jsx":"13","/home/e_tabidze/Documents/React-projects/project-ge-frontend/src/Components/pagination.jsx":"14","/home/e_tabidze/Documents/React-projects/project-ge-frontend/src/Components/adSlider.jsx":"15","/home/e_tabidze/Documents/React-projects/project-ge-frontend/src/Components/myProduct.jsx":"16","/home/e_tabidze/Documents/React-projects/project-ge-frontend/src/Components/newProductModal.jsx":"17","/home/e_tabidze/Documents/React-projects/project-ge-frontend/src/Reusable components/searchBar.jsx":"18","/home/e_tabidze/Documents/React-projects/project-ge-frontend/src/Reusable components/menuItem.jsx":"19","/home/e_tabidze/Documents/React-projects/project-ge-frontend/src/Reusable components/circle.jsx":"20","/home/e_tabidze/Documents/React-projects/project-ge-frontend/src/Reusable components/button.jsx":"21","/home/e_tabidze/Documents/React-projects/project-ge-frontend/src/Reusable components/filter.jsx":"22","/home/e_tabidze/Documents/React-projects/project-ge-frontend/src/Services/logService.js":"23","/home/e_tabidze/Documents/React-projects/project-ge-frontend/src/Components/productCard.jsx":"24","/home/e_tabidze/Documents/React-projects/project-ge-frontend/src/Reusable components/divider.jsx":"25","/home/e_tabidze/Documents/React-projects/project-ge-frontend/src/Components/loginForm.jsx":"26","/home/e_tabidze/Documents/React-projects/project-ge-frontend/src/Components/registerForm.jsx":"27","/home/e_tabidze/Documents/React-projects/project-ge-frontend/src/Components/confirmModal.jsx":"28","/home/e_tabidze/Documents/React-projects/project-ge-frontend/src/Reusable components/imgField.jsx":"29","/home/e_tabidze/Documents/React-projects/project-ge-frontend/src/Reusable components/input.jsx":"30"},{"size":641,"mtime":1614952702000,"results":"31","hashOfConfig":"32"},{"size":362,"mtime":1614952702000,"results":"33","hashOfConfig":"32"},{"size":1827,"mtime":1616818926000,"results":"34","hashOfConfig":"32"},{"size":1946,"mtime":1617895901446,"results":"35","hashOfConfig":"32"},{"size":1060,"mtime":1614952702000,"results":"36","hashOfConfig":"32"},{"size":2619,"mtime":1616826208000,"results":"37","hashOfConfig":"32"},{"size":3868,"mtime":1617899247018,"results":"38","hashOfConfig":"32"},{"size":2829,"mtime":1617799905111,"results":"39","hashOfConfig":"32"},{"size":2795,"mtime":1617709502003,"results":"40","hashOfConfig":"32"},{"size":21593,"mtime":1614952702000,"results":"41","hashOfConfig":"32"},{"size":612,"mtime":1614952702000,"results":"42","hashOfConfig":"32"},{"size":705,"mtime":1616567072000,"results":"43","hashOfConfig":"32"},{"size":1567,"mtime":1616568332000,"results":"44","hashOfConfig":"32"},{"size":3164,"mtime":1618481215118,"results":"45","hashOfConfig":"32"},{"size":1475,"mtime":1617693067074,"results":"46","hashOfConfig":"32"},{"size":3951,"mtime":1617822611723,"results":"47","hashOfConfig":"32"},{"size":15335,"mtime":1617894582051,"results":"48","hashOfConfig":"32"},{"size":422,"mtime":1617696849278,"results":"49","hashOfConfig":"32"},{"size":351,"mtime":1614952702000,"results":"50","hashOfConfig":"32"},{"size":240,"mtime":1614952702000,"results":"51","hashOfConfig":"32"},{"size":368,"mtime":1614952702000,"results":"52","hashOfConfig":"32"},{"size":1158,"mtime":1617899755323,"results":"53","hashOfConfig":"32"},{"size":299,"mtime":1614952702000,"results":"54","hashOfConfig":"32"},{"size":635,"mtime":1617479520440,"results":"55","hashOfConfig":"32"},{"size":152,"mtime":1614952702000,"results":"56","hashOfConfig":"32"},{"size":3215,"mtime":1616567830000,"results":"57","hashOfConfig":"32"},{"size":4779,"mtime":1617896993601,"results":"58","hashOfConfig":"32"},{"size":769,"mtime":1617815117682,"results":"59","hashOfConfig":"32"},{"size":239,"mtime":1615993850000,"results":"60","hashOfConfig":"32"},{"size":720,"mtime":1614952702000,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"iaxc8i",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":14,"source":"103","usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":4,"source":"123","usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":5,"source":"126","usedDeprecatedRules":"64"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},"/home/e_tabidze/Documents/React-projects/project-ge-frontend/src/index.js",[],["134","135"],"/home/e_tabidze/Documents/React-projects/project-ge-frontend/src/reportWebVitals.js",[],"/home/e_tabidze/Documents/React-projects/project-ge-frontend/src/App.js",[],"/home/e_tabidze/Documents/React-projects/project-ge-frontend/src/Services/APIEndpoints.jsx",[],"/home/e_tabidze/Documents/React-projects/project-ge-frontend/src/Components/footer.jsx",[],"/home/e_tabidze/Documents/React-projects/project-ge-frontend/src/Components/navbar.jsx",["136"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SearchBar from \"../Reusable components/searchBar\";\nimport Button from \"../Reusable components/button\";\nimport DropDownMenu from \"./dropdownMenu\";\nimport AccountModal from \"./accountModal\";\nimport logo from \"../Resources/images/logo.png\";\nimport MenuItem from \"../Reusable components/menuItem\";\n\nimport \"../CSS/navbar.css\";\n\nconst Navbar = ({\n  // handleSearchByName,\n  currentUser,\n}) => {\n  const [dropDownActive, setDropDownActive] = useState(false);\n  const [accountModalActive, setAccoutModalActive] = useState(false);\n\n  const handleAccountModalToggle = () => {\n    setAccoutModalActive(!accountModalActive);\n  };\n\n  const handleDropDownMenuToggle = () => {\n    setDropDownActive(!dropDownActive);\n  };\n\n  const handleNavigation = (e) => {\n    e.preventDefault();\n    window.location.href = \"/my-profile\";\n  };\n\n  return (\n    <div className=\"navbar-main-container\">\n      <Link to=\"/\">\n        <img src={logo} alt=\"gegold logo\" className=\"logo\" />\n      </Link>\n\n      {/* <SearchBar onChange={handleSearchByName} /> */}\n\n      {currentUser && (\n        <Link to=\"/my-profile\">\n          <span className=\"email-initial\">{currentUser.email.charAt(0)}</span>\n        </Link>\n      )}\n\n      {currentUser ? (\n        <Button\n          className=\"profile-button\"\n          label=\"პირადი კაბინეტი\"\n          onClick={handleNavigation}\n        />\n      ) : (\n        <Button\n          className=\"profile-button\"\n          label=\"პირადი კაბინეტი\"\n          onClick={handleAccountModalToggle}\n        />\n      )}\n\n      {accountModalActive && (\n        <>\n          <div className=\"accountModal\">\n            <AccountModal handleAccountModalToggle={handleAccountModalToggle} />\n          </div>\n          <div\n            className=\"grey-overlay\"\n            onClick={handleAccountModalToggle}\n          ></div>\n        </>\n      )}\n\n      <MenuItem\n        icon={<i className=\"fa fa-bars fa-2x\" />}\n        className=\"fa fa-bars fa-2x dropdowmmenuicon\"\n        onClick={handleDropDownMenuToggle}\n      />\n\n      {dropDownActive && (\n        <>\n          <div className=\"dropdown\">\n            <DropDownMenu\n              currentUser={currentUser}\n              onClick={handleDropDownMenuToggle}\n              handleAccountModalToggle={handleAccountModalToggle}\n            />\n          </div>\n          <div\n            className=\"grey-overlay\"\n            onClick={handleDropDownMenuToggle}\n          ></div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Navbar;\n","/home/e_tabidze/Documents/React-projects/project-ge-frontend/src/Pages/homePage.jsx",["137"],"import React, { useState, useEffect } from \"react\";\nimport {\n  getJewels,\n  getStones,\n  getMetals,\n  getPieces,\n} from \"../Services/APIEndpoints\";\nimport Filter from \"../Reusable components/filter\";\nimport Pagination from \"../Components/pagination\";\nimport AdSlider from \"../Components/adSlider\";\nimport SearchBar from \"../Reusable components/searchBar\";\n\nimport \"../CSS/homePage.css\";\n\nconst HomePage = () => {\n  const [jewels, setJewels] = useState([]);\n  const [pieces, setPieces] = useState(null);\n  const [metals, setMetals] = useState(null);\n  const [stones, setStones] = useState(null);\n  const [checkboxStates, setCheckboxStates] = useState({});\n\n  useEffect(() => {\n    handleGetPieces();\n    handleGetMetals();\n    handleGetStones();\n    handleGetJewels();\n  }, []);\n\n  const handleGetJewels = async () => {\n    let jewelData = await getJewels(setJewels);\n    setJewels(jewelData);\n  };\n\n  const handleGetPieces = async () => {\n    let piecesData = await getPieces();\n    setPieces(piecesData);\n  };\n\n  const handleGetStones = async () => {\n    let stonesData = await getStones();\n    setStones(stonesData);\n  };\n\n  const handleGetMetals = async () => {\n    let metalsData = await getMetals();\n    setMetals(metalsData);\n  };\n\n  const handlePieceSelect = async (piece) => {\n    let jewelArr = await getJewels();\n    let newPieceArr = jewelArr.filter((item) => {\n      return item.piece._id === piece._id;\n    });\n    setJewels(newPieceArr);\n  };\n\n  const handleMetalSelect = async (metal) => {\n    let jewelArr = await getJewels();\n    let newMetalArr = jewelArr.filter((item) => {\n      return item.metal._id === metal._id;\n    });\n    setJewels(newMetalArr);\n  };\n\n  const handleStoneSelect = async (stone) => {\n    let jewelArr = await getJewels();\n    let newStoneArr = jewelArr.filter((item) => {\n      return item.stone._id === stone._id;\n    });\n    setJewels(newStoneArr);\n  };\n\n  const checkboxChange = (item, title) => (event) => {\n    setCheckboxStates({ ...checkboxStates, [item._id]: event.target.checked });\n    switch (title) {\n      case \"ნაკეთობა\":\n        handlePieceSelect(item);\n        break;\n      case \"მასალა\":\n        handleMetalSelect(item);\n        break;\n      case \"შიგთავსი\":\n        handleStoneSelect(item);\n        break;\n\n      default:\n        break;\n    }\n  };\n  const handleSearchByName = async (symbols) => {\n    let demoJewels = await getJewels();\n    let filtered = demoJewels.filter((item) => {\n      return item.name.toLowerCase().includes(symbols.toLowerCase());\n    });\n    console.log(filtered);\n    setJewels(filtered);\n  };\n\n  return (\n    <div className=\"homepage-main-container\">\n      <div className=\"filter-section\">\n        <Filter\n          items={metals}\n          title={\"მასალა\"}\n          checkboxStates={checkboxStates}\n          onItemSelect={checkboxChange}\n        />\n        <Filter\n          items={pieces}\n          title={\"ნაკეთობა\"}\n          checkboxStates={checkboxStates}\n          onItemSelect={checkboxChange}\n        />\n        <Filter\n          items={stones}\n          title={\"შიგთავსი\"}\n          checkboxStates={checkboxStates}\n          onItemSelect={checkboxChange}\n        />\n      </div>\n      <div className=\"homepage-content\">\n        <div className=\"advertising-component\">\n          <SearchBar onChange={handleSearchByName} />\n          <AdSlider />\n        </div>\n        <div>{jewels.length != 0 && <Pagination jewels={jewels} />}</div>\n      </div>\n      <div>\n        <div className=\"right\">\n          <span className=\"right\">რეკლამის ბანერი</span>\n        </div>\n        <div className=\"right\">\n          <span className=\"right\">რეკლამის ბანერი</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n","/home/e_tabidze/Documents/React-projects/project-ge-frontend/src/Pages/userPage.jsx",["138"],"import React, { useState, useEffect } from \"react\";\nimport { getUserJewels } from \"../Services/APIEndpoints\";\nimport NewProductModal from \"../Components/newProductModal\";\nimport Circle from \"../Reusable components/circle\";\nimport MyProduct from \"../Components/myProduct\";\n\nimport \"../CSS/userPage.css\";\n\nconst UserPage = ({ currentUser }) => {\n  const [newProductModalActive, setNewProductModalActive] = useState(false);\n  const [userJewels, setUserJewels] = useState([]);\n\n  useEffect(() => {\n    handleGetUserJewels();\n  }, []);\n\n  const handleGetUserJewels = async () => {\n    let jewelData = await getUserJewels(currentUser._id);\n    setUserJewels(jewelData.data);\n  };\n\n  const handleNewProductModalToggle = () => {\n    setNewProductModalActive(!newProductModalActive);\n  };\n\n  return (\n    <div className=\"userpage-main-container\">\n      <div>რეკლამა აქ </div>\n      <div className=\"content\">\n        <div>რეკლამა</div>\n        <div className=\"user-settings\">\n          <div className=\"options\">\n            <Circle\n              label=\"განცხადების დამატება\"\n              onClick={handleNewProductModalToggle}\n            />\n\n            {newProductModalActive && (\n              <>\n                <div className=\"newProductModal\">\n                  <NewProductModal\n                    handleNewProductModalToggle={handleNewProductModalToggle}\n                    currentUser={currentUser}\n                  />\n                </div>\n                <div\n                  className=\"grey-overlay\"\n                  onClick={handleNewProductModalToggle}\n                ></div>\n              </>\n            )}\n            <Circle label=\"ბალანსის შევსება\" />\n            <Circle label=\"განცხადების განახლება\" />\n            <Circle label=\"განცხადების წაშლა\" />\n            <Circle label=\"Super\" />\n            <Circle label=\"VIP\" />\n          </div>\n          <div className=\"title\">\n            <p> მომხმარებლის ID: {currentUser._id[0]} </p>\n          </div>\n          <div className=\"title\">\n            <p> ჩემი განცხადებები</p>\n          </div>\n          <div>\n            {userJewels &&\n              userJewels.map((jewel, index) => {\n                return (\n                  <MyProduct\n                    key={index}\n                    jewel={jewel}\n                    userJewels={userJewels}\n                    setUserJewels={setUserJewels}\n                    getUserJewels={getUserJewels}\n                  />\n                );\n              })}\n          </div>\n        </div>\n      </div>\n      <div>რეკლამა</div>\n    </div>\n  );\n};\n\nexport default UserPage;\n","/home/e_tabidze/Documents/React-projects/project-ge-frontend/src/Pages/jewelPage.jsx",["139","140"],"import React, { useState, useEffect } from \"react\";\nimport { getJewel } from \"../Services/APIEndpoints\";\nimport \"../CSS/jewelPage.css\";\n\nconst JewelPage = () => {\n  const [jewel, setJewel] = useState(null);\n  useEffect(() => {\n    handleGetJewel();\n  }, []);\n\n  const handleGetJewel = async () => {\n    let jewelId = window.location.pathname.split(\"/\")[2];\n    let jewel = await getJewel(jewelId);\n    setJewel(jewel);\n  };\n\n  const renderSimilarJewel = () => {\n    let pieceType = jewel.piece.name;\n    let metalType = jewel.metal.name;\n    console.log(pieceType, metalType, \"types\");\n  };\n\n  return (\n    <div>\n      <div>აქ იქნება რეკლამის კონტეინერი</div>\n      <div className=\"jewelPage-main-container\">\n        <div className=\"imageSide\">\n          {jewel &&\n            jewel.productImage.map((img) => {\n              return (\n                <img\n                  className=\"main-image\"\n                  src={jewel && `http://localhost:3000/${img}`}\n                />\n              );\n            })}\n        </div>\n        <div className=\"descriptionSide\">\n          <div className=\"jewelpage-name\"> {jewel && jewel.name} </div>\n          <div className=\"jewelpage-price\">{jewel && jewel.price} ლარი</div>\n          <div className=\"jewelpage-phone\">{jewel && jewel.contactNumber}</div>\n          <div className=\"productdescitle\">პროდუქტის აღწერა</div>\n          <div className=\"separator\"></div>\n          <div className=\"jewelpage-description\">\n            {jewel && jewel.description}\n          </div>\n          <div className=\"productdescitle\">სპეციფიკაციები</div>\n          <div className=\"separator\"></div>\n          <table>\n            <tr>\n              <td>ნაკეთობა:</td>\n              <td>{jewel && jewel.piece.name}</td>\n            </tr>\n            <tr>\n              <td> მასალა: </td>\n              <td>{jewel && jewel.metal.name} </td>\n            </tr>\n            <tr>\n              <td>სინჯი:</td>\n              <td>{jewel && jewel.standard} </td>\n            </tr>\n            <tr>\n              <td>ზომა:</td>\n              <td>{jewel && jewel.size}</td>\n            </tr>\n            <tr>\n              <td>წონა:</td>\n              <td>{jewel && jewel.weight}</td>\n            </tr>\n            <tr>\n              <td> ძვირფასი ქვა: </td>\n              <td>{jewel && jewel.stone.name} </td>\n            </tr>\n          </table>\n          <div className=\"separator\"></div>\n          <div className=\"productdescitle\">მსგავსი პროდუქტები</div>\n        </div>\n        <div></div>\n      </div>\n    </div>\n  );\n};\n\nexport default JewelPage;\n","/home/e_tabidze/Documents/React-projects/project-ge-frontend/src/Pages/terms.jsx",[],"/home/e_tabidze/Documents/React-projects/project-ge-frontend/src/Services/httpService.js",["141"],"import axios from \"axios\";\nimport logger from \"./logService\";\nimport { toast } from \"react-toastify\";\n\naxios.interceptors.response.use(null, (error) => {\n  const expectedError =\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.status < 500;\n\n  if (!expectedError) {\n    logger.log(error);\n    toast.error(\"An unexpected error occurrred.\");\n  }\n\n  return Promise.reject(error);\n});\n\nconst setJwt = (jwt) => {\n  return axios.defaults.headers.common[\"x-auth-token\"] = jwt;\n};\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete,\n  setJwt,\n};\n","/home/e_tabidze/Documents/React-projects/project-ge-frontend/src/Components/accountModal.jsx",[],"/home/e_tabidze/Documents/React-projects/project-ge-frontend/src/Components/dropdownMenu.jsx",[],"/home/e_tabidze/Documents/React-projects/project-ge-frontend/src/Components/pagination.jsx",["142","143","144","145","146","147","148"],"import React, { useState } from \"react\";\nimport ProductCard from \"./productCard\";\n\nimport \"../CSS/pagination.css\";\n\nconst Pagination = ({ jewels }) => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(16);\n\n  const [pageNumberLimit, setPageNumberLimit] = useState(5);\n  const [maxPageNumberLimit, setMaxPageNumberLimit] = useState(5);\n  const [minPageNumberLimit, setMinPageNumberLimit] = useState(0);\n\n  const pages = [];\n  for (let i = 1; i <= Math.ceil(jewels && jewels.length / itemsPerPage); i++) {\n    pages.push(i);\n  }\n\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentItems =\n    jewels.length != 0 ? jewels.slice(indexOfFirstItem, indexOfLastItem) : null;\n\n  const handleClick = (e) => {\n    setCurrentPage(Number(e.target.id));\n  };\n\n  const renderData = () => {\n    return (\n      <div className=\"product-section\">\n        {currentItems.sort().map((jewel) => {\n          return <ProductCard key={jewel._id} jewel={jewel} />;\n        })}\n      </div>\n    );\n  };\n\n  const renderPageNumbers = pages.map((number) => {\n    if (number < maxPageNumberLimit + 1 && number > minPageNumberLimit) {\n      return (\n        <li\n          key={number}\n          id={number}\n          onClick={handleClick}\n          className={currentPage == number ? \"active\" : null}\n        >\n          {number}\n        </li>\n      );\n    } else {\n      return null;\n    }\n  });\n\n  const handleNexbtn = () => {\n    setCurrentPage(currentPage + 1);\n    if (currentPage + 1 > maxPageNumberLimit) {\n      setMaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit);\n      setMinPageNumberLimit(minPageNumberLimit + pageNumberLimit);\n    }\n  };\n\n  const handlePrevbtn = () => {\n    setCurrentPage(currentPage - 1);\n    if ((currentPage - 1) % pageNumberLimit == 0) {\n      setMaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit);\n      setMinPageNumberLimit(minPageNumberLimit - pageNumberLimit);\n    }\n  };\n\n  let pageIncrementbtn = null;\n  if (pages.length > maxPageNumberLimit) {\n    pageIncrementbtn = <li onClick={handleNexbtn}> &hellip; </li>;\n  }\n\n  let pageDecrementbtn = null;\n  if (pages.length > maxPageNumberLimit) {\n    pageDecrementbtn = <li onClick={handlePrevbtn}> &hellip; </li>;\n  }\n\n  return (\n    <div className=\"pagination-container-wrapper\">\n      <ul>{currentItems ? renderData() : null}</ul>\n      <ul className=\"pagenumbers\">\n        <li>\n          <button\n            className=\"buttonnav\"\n            onClick={handlePrevbtn}\n            disabled={currentPage == pages[0] ? true : false}\n          >\n            <i className=\"fa fa-angle-double-left fa-2x\" />\n          </button>\n        </li>\n        {pageDecrementbtn}\n        {renderPageNumbers}\n        {pageIncrementbtn}\n        <li>\n          <button\n            className=\"buttonnav\"\n            onClick={handleNexbtn}\n            disabled={currentPage == pages[pages.length - 1] ? true : false}\n          >\n            <i className=\"fa fa-angle-double-right fa-2x\" />\n          </button>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Pagination;\n","/home/e_tabidze/Documents/React-projects/project-ge-frontend/src/Components/adSlider.jsx",[],"/home/e_tabidze/Documents/React-projects/project-ge-frontend/src/Components/myProduct.jsx",[],"/home/e_tabidze/Documents/React-projects/project-ge-frontend/src/Components/newProductModal.jsx",["149","150","151","152","153","154","155","156","157","158","159","160","161","162"],"import React, { useEffect, useState } from \"react\";\nimport {\n  getMetals,\n  getPieces,\n  getStones,\n  getTypes,\n  postJewels,\n} from \"../Services/APIEndpoints\";\nimport Joi from \"joi-browser\";\nimport Button from \"../Reusable components/button\";\nimport ImageField from \"../Reusable components/imgField\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport {\n  TextField,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n} from \"@material-ui/core\";\n\nimport \"../CSS/newProductModal.css\";\n\nconst NewProductModal = ({ handleNewProductModalToggle, currentUser }) => {\n  const [pieces, setPieces] = useState(null);\n  const [metals, setMetals] = useState(null);\n  const [stones, setStones] = useState(null);\n  const [types, setTypes] = useState(null);\n  const [newJewel, setNewJewel] = useState({\n    duration: \"\",\n    name: \"\",\n    pieceId: \"\",\n    price: \"\",\n    metalId: \"\",\n    stoneId: \"\",\n    weight: \"\",\n    size: \"\",\n    standard: \"\",\n    contactPerson: \"\",\n    contactNumber: \"\",\n    description: \"\",\n    productImage: {},\n    typeId: \"\",\n  });\n  const [errors, setErrors] = useState({\n    duration: \"\",\n    name: \"\",\n    pieceId: \"\",\n    price: \"\",\n    metalId: \"\",\n    stoneId: \"\",\n    weight: \"\",\n    size: \"\",\n    standard: \"\",\n    contactPerson: \"\",\n    contactNumber: \"\",\n    description: \"\",\n    productImage: \"\",\n    typeId: \"\",\n  });\n\n  useEffect(() => {\n    handleGetPieces();\n    handleGetMetals();\n    handleGetStones();\n    handleGetTypes();\n  }, []);\n\n  const schema = {\n    duration: Joi.number()\n      .required()\n      .max(100)\n      .default(30)\n      .label(\"ხანგრძლივობა\"),\n    name: Joi.string().required().max(100).label(\"დასახელება\"),\n    pieceId: Joi.string().required().max(50).label(\"ნაკეთობა\"),\n    price: Joi.number().required().max(10000).label(\"ფასი\"),\n    metalId: Joi.string().max(50).label(\"მეტალი\"),\n    stoneId: Joi.string().max(50).label(\"შიგთავსი\"),\n    weight: Joi.number().max(10000).label(\"წონა\"),\n    size: Joi.string().max(100).label(\"ზომა\"),\n    standard: Joi.string().max(10000).label(\"სინჯი\"),\n    contactNumber: Joi.string().label(\"საკონტაქტო ნომერი\"),\n    contactPerson: Joi.string().label(\"საკონტაქტი პირი\"),\n    description: Joi.string().max(512).label(\"ნივთის აღწერა\"),\n    productImage: Joi.any(),\n    typeId: Joi.string().required(),\n  };\n\n  const handleGetPieces = async () => {\n    let piecesData = await getPieces();\n    setPieces(piecesData);\n  };\n\n  const handleGetMetals = async () => {\n    let metalsData = await getMetals();\n    setMetals(metalsData);\n  };\n\n  const handleGetStones = async () => {\n    let stonesData = await getStones();\n    setStones(stonesData);\n  };\n\n  const handleGetTypes = async () => {\n    let typesData = await getTypes();\n    setTypes(typesData);\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    let errorMessage = validateProperty({ name, value });\n\n    if (errorMessage)\n      setErrors((prevState) => ({\n        ...prevState,\n        [name]: errorMessage,\n      }));\n    else\n      setErrors((prevState) => ({\n        ...prevState,\n        [name]: null,\n      }));\n    if (name === \"productImage\") {\n      setNewJewel((prevState) => ({\n        ...prevState,\n        [name]: e.target.files,\n      }));\n    } else {\n      setNewJewel((prevState) => ({\n        ...prevState,\n        [name]: value,\n      }));\n    }\n  };\n\n  const validate = () => {\n    const result = Joi.validate(newJewel, schema, { abortEarly: false });\n\n    if (!result.error) return null;\n\n    const errors = {};\n    for (let item of result.error.details) errors[item.path[0]] = item.message;\n\n    return errors;\n  };\n\n  const validateProperty = ({ name, value }) => {\n    let obj = { [name]: value };\n    let demoSchema = { [name]: schema[name] };\n\n    const { error } = Joi.validate(obj, demoSchema);\n    if (error && error.details.length === 2) {\n      return error.details[1].message;\n    } else {\n      return error ? error.details[0].message : null;\n    }\n  };\n\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const demoErrors = validate();\n    setErrors((prevState) => ({\n      ...prevState,\n      [\"duration\"]: demoErrors ? demoErrors.duration : null,\n      [\"name\"]: demoErrors ? demoErrors.name : null,\n      [\"pieceId\"]: demoErrors ? demoErrors.piece : null,\n      [\"price\"]: demoErrors ? demoErrors.price : null,\n      [\"metalId\"]: demoErrors ? demoErrors.metal : null,\n      [\"stoneId\"]: demoErrors ? demoErrors.stone : null,\n      [\"weight\"]: demoErrors ? demoErrors.weight : null,\n      [\"size\"]: demoErrors ? demoErrors.size : null,\n      [\"standard\"]: demoErrors ? demoErrors.standard : null,\n      [\"contactNumber\"]: demoErrors ? demoErrors.contactNumber : null,\n      [\"contactPerson\"]: demoErrors ? demoErrors.contactPerson : null,\n      [\"description\"]: demoErrors ? demoErrors.description : null,\n      [\"productImage\"]: demoErrors ? demoErrors.productImage : null,\n      [\"typeId\"]: demoErrors ? demoErrors.type : null,\n    }));\n    if (demoErrors) console.log(demoErrors, \"demoerrors\", newJewel);\n    else {\n      let userToken = localStorage.getItem(\"token\");\n\n      let jewelFormData = objectToFormData(newJewel);\n      console.log(newJewel)\n      postJewels(jewelFormData, userToken);\n    }\n  };\n\n  const objectToFormData = (obj) => {\n    let fd = new FormData();\n    for (let item in obj) {\n      if (item === \"productImage\") {\n        for (const key of Object.keys(obj[item])) {\n          fd.append(item, obj[item][key]);\n        }\n      } else {\n        fd.append(item, obj[item]);\n      }\n    }\n    return fd;\n  };\n\n  return (\n    <div className=\"new-product-modal-container\">\n      <div className=\"new-product-modal-wrapper\">\n        <div className=\"closeIconWrapper\">\n          <CloseIcon\n            className=\"newproductmodalclose\"\n            onClick={handleNewProductModalToggle}\n          />\n        </div>\n        <span className=\"newjeweltitle\">ახალი განცხდების დამატება:</span>\n        <form onSubmit={handleSubmit}>\n          <div className=\"new-product-form\">\n            <div className=\"inner-blocks\">\n              <TextField\n                required\n                className=\"input-form\"\n                name=\"name\"\n                value={newJewel.name}\n                onChange={handleChange}\n                label=\"დასახელება\"\n                size=\"small\"\n                variant=\"outlined\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n              {errors.name && <span>{errors.name}</span>}\n              <FormControl>\n                <InputLabel>ნაკეთობა</InputLabel>\n                {pieces && (\n                  <Select\n                    name={\"pieceId\"}\n                    label={\"ნაკეთობა\"}\n                    value={newJewel.pieceId}\n                    onChange={handleChange}\n                    variant=\"outlined\"\n                  >\n                    {pieces.map((piece) => {\n                      return (\n                        <MenuItem\n                          key={piece._id}\n                          value={piece._id}\n                          error={errors.pieceId}\n                        >\n                          {piece.name}\n                        </MenuItem>\n                      );\n                    })}\n                  </Select>\n                )}\n              </FormControl>\n              <FormControl>\n                <InputLabel>ძვირფასი მეტალი</InputLabel>\n                {metals && (\n                  <Select\n                    name={\"metalId\"}\n                    label={\"ძვირფასი მეტალი\"}\n                    value={newJewel.metalId}\n                    onChange={handleChange}\n                    variant=\"outlined\"\n                  >\n                    {metals.map((metal) => {\n                      return (\n                        <MenuItem\n                          key={metal._id}\n                          value={metal._id}\n                          error={errors.metalId}\n                        >\n                          {metal.name}\n                        </MenuItem>\n                      );\n                    })}\n                  </Select>\n                )}\n              </FormControl>\n              <TextField\n                className=\"input-form\"\n                name=\"standard\"\n                value={newJewel.standard}\n                onChange={handleChange}\n                label={\"სინჯი\"}\n                // error={errors.standard}\n                size=\"small\"\n                variant=\"outlined\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n              {errors.standard && <span>{errors.standard}</span>}\n\n              <FormControl>\n                <InputLabel>შიგთავსი</InputLabel>\n                {stones && (\n                  <Select\n                    name={\"stoneId\"}\n                    label={\"ძვირფასი მეტალი\"}\n                    value={newJewel.stoneId}\n                    onChange={handleChange}\n                    variant=\"outlined\"\n                  >\n                    {stones.map((stone) => {\n                      return (\n                        <MenuItem\n                          key={stone._id}\n                          value={stone._id}\n                          error={errors.stoneId}\n                        >\n                          {stone.name}\n                        </MenuItem>\n                      );\n                    })}\n                  </Select>\n                )}\n              </FormControl>\n              <TextField\n                className=\"input-form\"\n                name=\"weight\"\n                value={newJewel.weight}\n                onChange={handleChange}\n                label={\"წონა (გრამი)\"}\n                // error={errors.weight}\n                size=\"small\"\n                variant=\"outlined\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n              {errors.weight && <span>{errors.weight}</span>}\n\n              <TextField\n                className=\"input-form\"\n                name=\"size\"\n                value={newJewel.size}\n                onChange={handleChange}\n                label={\"ზომა\"}\n                // error={errors.size}\n                size=\"small\"\n                variant=\"outlined\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n              {errors.size && <span>{errors.size}</span>}\n            </div>\n            <div className=\"inner-blocks\">\n              <TextField\n                required\n                className=\"input-form\"\n                name=\"duration\"\n                value={newJewel.duration}\n                onChange={handleChange}\n                label=\"ხანგრძლივობა (დღეები) \"\n                // error={errors.duration}\n                size=\"small\"\n                variant=\"outlined\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n              {errors.duration && <span>{errors.duration}</span>}\n\n              <TextField\n                required\n                className=\"input-form\"\n                name=\"price\"\n                value={newJewel.price}\n                onChange={handleChange}\n                label={\"ფასი\"}\n                // error={errors.price}\n                size=\"small\"\n                variant=\"outlined\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n              {errors.price && <span>{errors.price}</span>}\n\n              <span>საკონტაქტო პირი:</span>\n              <TextField\n                className=\"input-form\"\n                name=\"contactPerson\"\n                value={newJewel.contactPerson}\n                onChange={handleChange}\n                label={\"სახელი\"}\n                // error={errors.contactNumber}\n                size=\"small\"\n                variant=\"outlined\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n              {errors.contactPerson && <span>{errors.contactPerson}</span>}\n\n              <TextField\n                className=\"input-form\"\n                name=\"contactNumber\"\n                value={newJewel.contactNumber}\n                onChange={handleChange}\n                label={\"საკონტაქტო ნომერი\"}\n                // error={errors.contactNumber}\n                size=\"small\"\n                variant=\"outlined\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n              {errors.contactNumber && <span>{errors.contactNumber}</span>}\n\n              <FormControl>\n                <InputLabel>განცხადების ტიპი</InputLabel>\n                {types && (\n                  <Select\n                    name={\"typeId\"}\n                    label={\"განცხადების ტიპი\"}\n                    value={newJewel.typeId}\n                    onChange={handleChange}\n                    variant=\"outlined\"\n                  >\n                    {types.map((type) => {\n                      return (\n                        <MenuItem\n                          key={type._id}\n                          value={type._id}\n                          error={errors.typeId}\n                        >\n                          {type.name}\n                        </MenuItem>\n                      );\n                    })}\n                  </Select>\n                )}\n              </FormControl>\n            </div>\n          </div>\n\n          <div className=\"descriptionSection\">\n            <ImageField onChange={handleChange} />\n\n            <TextField\n              fullWidth\n              className=\"input-form description\"\n              style={{\"height\": \"100px\"}}\n              name=\"description\"\n              value={newJewel.description}\n              onChange={handleChange}\n              label=\"ნივთის აღწერა\"\n              size=\"medium\"\n              variant=\"outlined\"\n              rows={12}\n              InputLabelProps={{\n                shrink: true,\n              }}\n              inputProps={{\n                maxLength: 512,\n                style: {\n                  height: '100px',\n                },\n              }}\n              helperText=\"მაქსიმუმ 512 სიმბოლო\"\n            />\n            {errors.description && <span>{errors.description}</span>}\n          </div>\n\n          <Button\n            className=\"new-product-submit\"\n            label={\"ახალი პროდუქტის დამატება\"}\n            onClick={handleSubmit}\n            // disabled={validate()}\n          />\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default NewProductModal;\n","/home/e_tabidze/Documents/React-projects/project-ge-frontend/src/Reusable components/searchBar.jsx",[],"/home/e_tabidze/Documents/React-projects/project-ge-frontend/src/Reusable components/menuItem.jsx",[],"/home/e_tabidze/Documents/React-projects/project-ge-frontend/src/Reusable components/circle.jsx",[],"/home/e_tabidze/Documents/React-projects/project-ge-frontend/src/Reusable components/button.jsx",[],"/home/e_tabidze/Documents/React-projects/project-ge-frontend/src/Reusable components/filter.jsx",[],"/home/e_tabidze/Documents/React-projects/project-ge-frontend/src/Services/logService.js",["163"],"// import Raven from \"raven-js\";\n\nfunction init() {\n  //   Raven.config(\n  //     \"https://48a86b2e18a44e048325aaf9fe2dc1a0@o422197.ingest.sentry.io/5345351\",\n  //     { release: \"1-0-0\", environment: \"development\" }\n  //   ).install();\n}\n\nfunction log(error) {}\n\nexport default {\n  init,\n  log,\n};\n","/home/e_tabidze/Documents/React-projects/project-ge-frontend/src/Components/productCard.jsx",[],"/home/e_tabidze/Documents/React-projects/project-ge-frontend/src/Reusable components/divider.jsx",[],"/home/e_tabidze/Documents/React-projects/project-ge-frontend/src/Components/loginForm.jsx",["164","165","166","167","168"],"import React, { useState } from \"react\";\nimport Joi from \"joi-browser\";\nimport Button from \"../Reusable components/button\";\nimport Input from \"../Reusable components/input\";\nimport { login } from \"../Services/APIEndpoints\";\n\nimport \"../CSS/loginForm.css\";\n\nconst LoginForm = ({ handleModalToggle }) => {\n  const [user, setUser] = useState({ email: \"\", password: \"\" });\n  const [errors, setErrors] = useState({ email: \"\", password: \"\" });\n\n  const schema = {\n    email: Joi.string().email().required().label(\"Email\"),\n    password: Joi.string().max(30).min(8).required().label(\"Password\"),\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    const errorMessage = validateProperty({ name, value });\n    console.log(errorMessage, \"errorMessage\");\n    if (errorMessage)\n      setErrors((prevState) => ({\n        ...prevState,\n        [name]: errorMessage,\n      }));\n    else\n      setErrors((prevState) => ({\n        ...prevState,\n        [name]: null,\n      }));\n\n    setUser((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const validate = () => {\n    const result = Joi.validate(user, schema, { abortEarly: false });\n\n    if (!result.error) return null;\n\n    const errors = {};\n    for (let item of result.error.details) errors[item.path[0]] = item.message;\n\n    return errors;\n  };\n\n  const validateProperty = ({ name, value }) => {\n    const obj = { [name]: value };\n    const demoSchema = { [name]: schema[name] };\n    const { error } = Joi.validate(obj, demoSchema);\n    return error ? error.details[0].message : null;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const demoErrors = validate();\n\n    setErrors((prevState) => ({\n      ...prevState,\n      [\"email\"]: demoErrors ? demoErrors.email : null,\n      [\"password\"]: demoErrors ? demoErrors.password : null,\n    }));\n    try {\n      const { data: jwt } = await login(user.email, user.password);\n      localStorage.setItem(\"token\", jwt);\n      console.log(\"token\", jwt);\n      window.location.reload(false);\n      handleModalToggle();\n    } catch (ex) {\n      if (ex.response && ex.response.status == 400) {\n        setErrors((prevState) => ({\n          ...prevState,\n          [\"email\"]: ex.response.data,\n          [\"password\"]: ex.response.data,\n        }));\n      }\n    }\n  };\n\n  return (\n    <div className=\"login-container\">\n      <h1>შესვლა</h1>\n      <form className=\"login-form\" onSubmit={handleSubmit}>\n        <Input\n          className=\"input-form\"\n          name=\"email\"\n          value={user.email}\n          onChange={handleChange}\n          placeholder=\"თქვენი ელ-ფოსტა\"\n          error={errors.email}\n          autoFocus={true}\n        />\n        <Input\n          className=\"input-form\"\n          name=\"password\"\n          value={user.password}\n          onChange={handleChange}\n          type=\"password\"\n          placeholder=\"პაროლი\"\n          error={errors.password}\n        />\n        <Button\n          className=\"login-submit\"\n          label=\"შესვლა\"\n          onClick={handleSubmit}\n          disabled={validate()}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","/home/e_tabidze/Documents/React-projects/project-ge-frontend/src/Components/registerForm.jsx",["169","170","171","172","173","174","175"],"import React, { useState } from \"react\";\nimport Joi from \"joi-browser\";\nimport Input from \"../Reusable components/input\";\nimport Button from \"../Reusable components/button\";\nimport { registerUser } from \"../Services/APIEndpoints\";\nimport { Link } from \"react-router-dom\";\n\nimport \"../CSS/registerForm.css\";\n\nconst RegisterForm = ({ handleModalToggle }) => {\n  const [user, setUser] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    repeat_password: \"\",\n  });\n  const [errors, setErrors] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    repeat_password: \"\",\n  });\n\n  const schema = {\n    name: Joi.string().max(50).required().label(\"სახელი\"),\n    email: Joi.string().email().required().max(255).label(\"Email\"),\n    password: Joi.string().max(255).min(8).required().label(\"Password\"),\n    repeat_password: Joi.any()\n      .valid(Joi.ref(\"password\"))\n      .required()\n      .error(() => {\n        return { message: \"The passwords don't match.\" };\n      }),\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    let errorMessage = validateProperty({ name, value });\n\n    if (errorMessage)\n      setErrors((prevState) => ({\n        ...prevState,\n        [name]: errorMessage,\n      }));\n    else\n      setErrors((prevState) => ({\n        ...prevState,\n        [name]: null,\n      }));\n\n    setUser((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const validate = () => {\n    const result = Joi.validate(user, schema, { abortEarly: false });\n\n    if (!result.error) return null;\n\n    const errors = {};\n    for (let item of result.error.details) errors[item.path[0]] = item.message;\n\n    return errors;\n  };\n\n  const validateProperty = ({ name, value }) => {\n    let obj = { [name]: value };\n    let demoSchema = { [name]: schema[name] };\n    if (name === \"repeat_password\") {\n      obj = { password: user.password, [name]: value };\n      demoSchema = { [name]: schema[name], password: schema[\"password\"] };\n    }\n\n    const { error } = Joi.validate(obj, demoSchema);\n    if (error && name === \"repeat_password\") {\n      if (error.details.length === 2) {\n        return error.details[1].message;\n      } else {\n        return error.details[0].message;\n      }\n    } else {\n      return error ? error.details[0].message : null;\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const demoErrors = validate();\n\n    setErrors((prevState) => ({\n      ...prevState,\n      [\"name\"]: demoErrors ? demoErrors.name : null,\n      [\"email\"]: demoErrors ? demoErrors.email : null,\n      [\"password\"]: demoErrors ? demoErrors.password : null,\n      [\"repeat_password\"]: demoErrors ? demoErrors.repeat_password : null,\n    }));\n\n    try {\n      const response = await registerUser(user);\n      localStorage.setItem(\"token\", response.headers[\"x-auth-token\"]);\n      handleModalToggle();\n      window.location.reload(false);\n    } catch (ex) {\n      if (ex.response && ex.response.status == 400) {\n        setErrors((prevState) => ({\n          ...prevState,\n          [\"email\"]: ex.response.data,\n        }));\n      }\n    }\n  };\n\n  return (\n    <div className=\"register-container\">\n      <h1>რეგისტრაცია</h1>\n      <form className=\"login-form\" onSubmit={handleSubmit}>\n        <Input\n          className=\"input-form\"\n          name=\"name\"\n          value={user.name}\n          onChange={handleChange}\n          placeholder=\"თქვენი სახელი\"\n          error={errors.name}\n        />\n        <Input\n          className=\"input-form\"\n          name=\"email\"\n          value={user.email}\n          onChange={handleChange}\n          placeholder=\"თქვენი ელ-ფოსტა\"\n          error={errors.email}\n        />\n        <Input\n          className=\"input-form\"\n          name=\"password\"\n          value={user.password}\n          onChange={handleChange}\n          type=\"password\"\n          placeholder=\"პაროლი\"\n          error={errors.password}\n        />\n        <Input\n          className=\"input-form\"\n          name=\"repeat_password\"\n          value={user.repeat_password}\n          onChange={handleChange}\n          type=\"password\"\n          placeholder=\"გაიმეორეთ პაროლი\"\n          error={errors.repeat_password}\n        />\n        <span>\n          გთხოვთ გაეცნოთ\n          <Link to=\"/terms\" target=\"_blank\">\n            <a> საიტის წესებს</a>\n          </Link>\n        </span>\n        <Button\n          className=\"register-submit\"\n          label=\"რეგისტრაცია\"\n          onClick={handleSubmit}\n          // disabled={validate()}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default RegisterForm;\n","/home/e_tabidze/Documents/React-projects/project-ge-frontend/src/Components/confirmModal.jsx",[],"/home/e_tabidze/Documents/React-projects/project-ge-frontend/src/Reusable components/imgField.jsx",[],"/home/e_tabidze/Documents/React-projects/project-ge-frontend/src/Reusable components/input.jsx",["176"],"import React from \"react\";\n\nimport \"../CSS/input.css\";\n\nconst Input = ({\n  name,\n  value,\n  onChange,\n  type,\n  placeholder,\n  error,\n  autoFocus,\n  className,\n  label,\n}) => {\n  return (\n    <div className={ label ? \"input-container\" : \"\"}>\n      {label && <div className=\"label\"> {label} </div>}\n      <div className={label ? \"input-field\" : \"\"} >\n        <input\n          className=\"input-form\"\n          className={className}\n          value={value}\n          name={name}\n          id={name}\n          onChange={onChange}\n          type={type}\n          autoFocus={autoFocus}\n          placeholder={placeholder}\n        />\n        {error && <div>{error}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default Input;\n",{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","severity":1,"message":"182","line":3,"column":8,"nodeType":"183","messageId":"184","endLine":3,"endColumn":17},{"ruleId":"185","severity":1,"message":"186","line":126,"column":29,"nodeType":"187","messageId":"188","endLine":126,"endColumn":31},{"ruleId":"189","severity":1,"message":"190","line":15,"column":6,"nodeType":"191","endLine":15,"endColumn":8,"suggestions":"192"},{"ruleId":"181","severity":1,"message":"193","line":17,"column":9,"nodeType":"183","messageId":"184","endLine":17,"endColumn":27},{"ruleId":"194","severity":1,"message":"195","line":31,"column":17,"nodeType":"196","endLine":34,"endColumn":19},{"ruleId":"197","severity":1,"message":"198","line":23,"column":1,"nodeType":"199","endLine":29,"endColumn":3},{"ruleId":"181","severity":1,"message":"200","line":8,"column":24,"nodeType":"183","messageId":"184","endLine":8,"endColumn":39},{"ruleId":"181","severity":1,"message":"201","line":10,"column":27,"nodeType":"183","messageId":"184","endLine":10,"endColumn":45},{"ruleId":"185","severity":1,"message":"186","line":22,"column":19,"nodeType":"187","messageId":"188","endLine":22,"endColumn":21},{"ruleId":"185","severity":1,"message":"202","line":45,"column":34,"nodeType":"187","messageId":"188","endLine":45,"endColumn":36},{"ruleId":"185","severity":1,"message":"202","line":65,"column":45,"nodeType":"187","messageId":"188","endLine":65,"endColumn":47},{"ruleId":"185","severity":1,"message":"202","line":89,"column":35,"nodeType":"187","messageId":"188","endLine":89,"endColumn":37},{"ruleId":"185","severity":1,"message":"202","line":101,"column":35,"nodeType":"187","messageId":"188","endLine":101,"endColumn":37},{"ruleId":"203","severity":1,"message":"204","line":165,"column":7,"nodeType":"205","messageId":"206","endLine":165,"endColumn":60,"fix":"207"},{"ruleId":"203","severity":1,"message":"208","line":166,"column":7,"nodeType":"205","messageId":"206","endLine":166,"endColumn":52,"fix":"209"},{"ruleId":"203","severity":1,"message":"210","line":167,"column":7,"nodeType":"205","messageId":"206","endLine":167,"endColumn":56,"fix":"211"},{"ruleId":"203","severity":1,"message":"212","line":168,"column":7,"nodeType":"205","messageId":"206","endLine":168,"endColumn":54,"fix":"213"},{"ruleId":"203","severity":1,"message":"214","line":169,"column":7,"nodeType":"205","messageId":"206","endLine":169,"endColumn":56,"fix":"215"},{"ruleId":"203","severity":1,"message":"216","line":170,"column":7,"nodeType":"205","messageId":"206","endLine":170,"endColumn":56,"fix":"217"},{"ruleId":"203","severity":1,"message":"218","line":171,"column":7,"nodeType":"205","messageId":"206","endLine":171,"endColumn":56,"fix":"219"},{"ruleId":"203","severity":1,"message":"220","line":172,"column":7,"nodeType":"205","messageId":"206","endLine":172,"endColumn":52,"fix":"221"},{"ruleId":"203","severity":1,"message":"222","line":173,"column":7,"nodeType":"205","messageId":"206","endLine":173,"endColumn":60,"fix":"223"},{"ruleId":"203","severity":1,"message":"224","line":174,"column":7,"nodeType":"205","messageId":"206","endLine":174,"endColumn":70,"fix":"225"},{"ruleId":"203","severity":1,"message":"226","line":175,"column":7,"nodeType":"205","messageId":"206","endLine":175,"endColumn":70,"fix":"227"},{"ruleId":"203","severity":1,"message":"228","line":176,"column":7,"nodeType":"205","messageId":"206","endLine":176,"endColumn":66,"fix":"229"},{"ruleId":"203","severity":1,"message":"230","line":177,"column":7,"nodeType":"205","messageId":"206","endLine":177,"endColumn":68,"fix":"231"},{"ruleId":"203","severity":1,"message":"232","line":178,"column":7,"nodeType":"205","messageId":"206","endLine":178,"endColumn":54,"fix":"233"},{"ruleId":"197","severity":1,"message":"198","line":12,"column":1,"nodeType":"199","endLine":15,"endColumn":3},{"ruleId":"203","severity":1,"message":"234","line":64,"column":7,"nodeType":"205","messageId":"206","endLine":64,"endColumn":54,"fix":"235"},{"ruleId":"203","severity":1,"message":"236","line":65,"column":7,"nodeType":"205","messageId":"206","endLine":65,"endColumn":60,"fix":"237"},{"ruleId":"185","severity":1,"message":"202","line":74,"column":45,"nodeType":"187","messageId":"188","endLine":74,"endColumn":47},{"ruleId":"203","severity":1,"message":"234","line":77,"column":11,"nodeType":"205","messageId":"206","endLine":77,"endColumn":38,"fix":"238"},{"ruleId":"203","severity":1,"message":"236","line":78,"column":11,"nodeType":"205","messageId":"206","endLine":78,"endColumn":41,"fix":"239"},{"ruleId":"203","severity":1,"message":"208","line":95,"column":7,"nodeType":"205","messageId":"206","endLine":95,"endColumn":52,"fix":"240"},{"ruleId":"203","severity":1,"message":"234","line":96,"column":7,"nodeType":"205","messageId":"206","endLine":96,"endColumn":54,"fix":"241"},{"ruleId":"203","severity":1,"message":"236","line":97,"column":7,"nodeType":"205","messageId":"206","endLine":97,"endColumn":60,"fix":"242"},{"ruleId":"203","severity":1,"message":"243","line":98,"column":7,"nodeType":"205","messageId":"206","endLine":98,"endColumn":74,"fix":"244"},{"ruleId":"185","severity":1,"message":"202","line":107,"column":45,"nodeType":"187","messageId":"188","endLine":107,"endColumn":47},{"ruleId":"203","severity":1,"message":"234","line":110,"column":11,"nodeType":"205","messageId":"206","endLine":110,"endColumn":38,"fix":"245"},{"ruleId":"246","severity":1,"message":"247","line":157,"column":13,"nodeType":"196","endLine":157,"endColumn":16},{"ruleId":"248","severity":1,"message":"249","line":22,"column":11,"nodeType":"250","endLine":22,"endColumn":32},"no-native-reassign",["251"],"no-negated-in-lhs",["252"],"no-unused-vars","'SearchBar' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleGetUserJewels'. Either include it or remove the dependency array.","ArrayExpression",["253"],"'renderSimilarJewel' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'setItemsPerPage' is assigned a value but never used.","'setPageNumberLimit' is assigned a value but never used.","Expected '===' and instead saw '=='.","no-useless-computed-key","Unnecessarily computed property [\"duration\"] found.","Property","unnecessarilyComputedProperty",{"range":"254","text":"255"},"Unnecessarily computed property [\"name\"] found.",{"range":"256","text":"257"},"Unnecessarily computed property [\"pieceId\"] found.",{"range":"258","text":"259"},"Unnecessarily computed property [\"price\"] found.",{"range":"260","text":"261"},"Unnecessarily computed property [\"metalId\"] found.",{"range":"262","text":"263"},"Unnecessarily computed property [\"stoneId\"] found.",{"range":"264","text":"265"},"Unnecessarily computed property [\"weight\"] found.",{"range":"266","text":"267"},"Unnecessarily computed property [\"size\"] found.",{"range":"268","text":"269"},"Unnecessarily computed property [\"standard\"] found.",{"range":"270","text":"271"},"Unnecessarily computed property [\"contactNumber\"] found.",{"range":"272","text":"273"},"Unnecessarily computed property [\"contactPerson\"] found.",{"range":"274","text":"275"},"Unnecessarily computed property [\"description\"] found.",{"range":"276","text":"277"},"Unnecessarily computed property [\"productImage\"] found.",{"range":"278","text":"279"},"Unnecessarily computed property [\"typeId\"] found.",{"range":"280","text":"281"},"Unnecessarily computed property [\"email\"] found.",{"range":"282","text":"283"},"Unnecessarily computed property [\"password\"] found.",{"range":"284","text":"285"},{"range":"286","text":"283"},{"range":"287","text":"285"},{"range":"288","text":"257"},{"range":"289","text":"283"},{"range":"290","text":"285"},"Unnecessarily computed property [\"repeat_password\"] found.",{"range":"291","text":"292"},{"range":"293","text":"283"},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"294","fix":"295"},[4113,4125],"\"duration\"",[4174,4182],"\"name\"",[4227,4238],"\"pieceId\"",[4284,4293],"\"price\"",[4339,4350],"\"metalId\"",[4396,4407],"\"stoneId\"",[4453,4463],"\"weight\"",[4510,4518],"\"size\"",[4563,4575],"\"standard\"",[4624,4641],"\"contactNumber\"",[4695,4712],"\"contactPerson\"",[4766,4781],"\"description\"",[4833,4849],"\"productImage\"",[4902,4912],"\"typeId\"",[1742,1751],"\"email\"",[1797,1809],"\"password\"",[2221,2230],[2260,2272],[2474,2482],[2527,2536],[2582,2594],[2643,2662],"\"repeat_password\"",[3059,3068],"Update the dependencies array to be: [handleGetUserJewels]",{"range":"296","text":"297"},[526,528],"[handleGetUserJewels]"]