[{"/home/e_tabidze/Documents/React/project-ge-frontend/src/index.js":"1","/home/e_tabidze/Documents/React/project-ge-frontend/src/App.js":"2","/home/e_tabidze/Documents/React/project-ge-frontend/src/reportWebVitals.js":"3","/home/e_tabidze/Documents/React/project-ge-frontend/src/Services/APIEndpoints.jsx":"4","/home/e_tabidze/Documents/React/project-ge-frontend/src/Components/navbar.jsx":"5","/home/e_tabidze/Documents/React/project-ge-frontend/src/Components/footer.jsx":"6","/home/e_tabidze/Documents/React/project-ge-frontend/src/Pages/homePage.jsx":"7","/home/e_tabidze/Documents/React/project-ge-frontend/src/Pages/terms.jsx":"8","/home/e_tabidze/Documents/React/project-ge-frontend/src/Pages/jewelPage.jsx":"9","/home/e_tabidze/Documents/React/project-ge-frontend/src/Pages/userPage.jsx":"10","/home/e_tabidze/Documents/React/project-ge-frontend/src/Services/httpService.js":"11","/home/e_tabidze/Documents/React/project-ge-frontend/src/Components/dropdownMenu.jsx":"12","/home/e_tabidze/Documents/React/project-ge-frontend/src/Components/accountModal.jsx":"13","/home/e_tabidze/Documents/React/project-ge-frontend/src/Components/adSlider.jsx":"14","/home/e_tabidze/Documents/React/project-ge-frontend/src/Components/pagination.jsx":"15","/home/e_tabidze/Documents/React/project-ge-frontend/src/Components/myProduct.jsx":"16","/home/e_tabidze/Documents/React/project-ge-frontend/src/Components/newProductModal.jsx":"17","/home/e_tabidze/Documents/React/project-ge-frontend/src/Reusable components/searchBar.jsx":"18","/home/e_tabidze/Documents/React/project-ge-frontend/src/Reusable components/menuItem.jsx":"19","/home/e_tabidze/Documents/React/project-ge-frontend/src/Reusable components/button.jsx":"20","/home/e_tabidze/Documents/React/project-ge-frontend/src/Reusable components/filter.jsx":"21","/home/e_tabidze/Documents/React/project-ge-frontend/src/Services/logService.js":"22","/home/e_tabidze/Documents/React/project-ge-frontend/src/Components/loginForm.jsx":"23","/home/e_tabidze/Documents/React/project-ge-frontend/src/Reusable components/divider.jsx":"24","/home/e_tabidze/Documents/React/project-ge-frontend/src/Components/registerForm.jsx":"25","/home/e_tabidze/Documents/React/project-ge-frontend/src/Components/productCard.jsx":"26","/home/e_tabidze/Documents/React/project-ge-frontend/src/Components/confirmModal.jsx":"27","/home/e_tabidze/Documents/React/project-ge-frontend/src/Reusable components/imgField.jsx":"28","/home/e_tabidze/Documents/React/project-ge-frontend/src/Reusable components/input.jsx":"29","/home/e_tabidze/Documents/React/project-ge-frontend/src/Components/JewelSlider.jsx":"30","/home/e_tabidze/Documents/React/project-ge-frontend/src/Components/jewelImageSlider.jsx":"31"},{"size":641,"mtime":1620679495849,"results":"32","hashOfConfig":"33"},{"size":1827,"mtime":1616779326000,"results":"34","hashOfConfig":"33"},{"size":362,"mtime":1614909502000,"results":"35","hashOfConfig":"33"},{"size":2638,"mtime":1625604106054,"results":"36","hashOfConfig":"33"},{"size":2694,"mtime":1626289773913,"results":"37","hashOfConfig":"33"},{"size":1075,"mtime":1626289738530,"results":"38","hashOfConfig":"33"},{"size":5983,"mtime":1625937483024,"results":"39","hashOfConfig":"33"},{"size":21593,"mtime":1614909502000,"results":"40","hashOfConfig":"33"},{"size":4983,"mtime":1626295035494,"results":"41","hashOfConfig":"33"},{"size":2502,"mtime":1623675681292,"results":"42","hashOfConfig":"33"},{"size":612,"mtime":1614909502000,"results":"43","hashOfConfig":"33"},{"size":1582,"mtime":1626289754522,"results":"44","hashOfConfig":"33"},{"size":705,"mtime":1616527472000,"results":"45","hashOfConfig":"33"},{"size":1475,"mtime":1626291194768,"results":"46","hashOfConfig":"33"},{"size":3123,"mtime":1622655912044,"results":"47","hashOfConfig":"33"},{"size":3965,"mtime":1625599932719,"results":"48","hashOfConfig":"33"},{"size":15370,"mtime":1623673772915,"results":"49","hashOfConfig":"33"},{"size":422,"mtime":1617657248000,"results":"50","hashOfConfig":"33"},{"size":351,"mtime":1622538471720,"results":"51","hashOfConfig":"33"},{"size":368,"mtime":1614909502000,"results":"52","hashOfConfig":"33"},{"size":1158,"mtime":1617860154000,"results":"53","hashOfConfig":"33"},{"size":299,"mtime":1614909502000,"results":"54","hashOfConfig":"33"},{"size":3565,"mtime":1626608210024,"results":"55","hashOfConfig":"33"},{"size":152,"mtime":1614909502000,"results":"56","hashOfConfig":"33"},{"size":4998,"mtime":1626610268453,"results":"57","hashOfConfig":"33"},{"size":644,"mtime":1626289786664,"results":"58","hashOfConfig":"33"},{"size":769,"mtime":1617775516000,"results":"59","hashOfConfig":"33"},{"size":239,"mtime":1615954250000,"results":"60","hashOfConfig":"33"},{"size":720,"mtime":1614909502000,"results":"61","hashOfConfig":"33"},{"size":1798,"mtime":1621438356835,"results":"62","hashOfConfig":"33"},{"size":1153,"mtime":1626294711937,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"isyaxb",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"66"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":12,"source":"104","usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"66"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":4,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":5,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"66"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/e_tabidze/Documents/React/project-ge-frontend/src/index.js",[],["135","136"],"/home/e_tabidze/Documents/React/project-ge-frontend/src/App.js",[],"/home/e_tabidze/Documents/React/project-ge-frontend/src/reportWebVitals.js",[],"/home/e_tabidze/Documents/React/project-ge-frontend/src/Services/APIEndpoints.jsx",[],"/home/e_tabidze/Documents/React/project-ge-frontend/src/Components/navbar.jsx",[],"/home/e_tabidze/Documents/React/project-ge-frontend/src/Components/footer.jsx",[],"/home/e_tabidze/Documents/React/project-ge-frontend/src/Pages/homePage.jsx",["137","138"],"import React, { useState, useEffect } from \"react\";\nimport {\n  getJewels,\n  getStones,\n  getMetals,\n  getPieces,\n  // getSuperJewels,\n  // getVipJewels,\n  // getDefaultJewels,\n  // getJewel,\n} from \"../Services/APIEndpoints\";\nimport Filter from \"../Reusable components/filter\";\nimport Pagination from \"../Components/pagination\";\nimport AdSlider from \"../Components/adSlider\";\nimport SearchBar from \"../Reusable components/searchBar\";\n\nimport \"../CSS/homePage.css\";\nimport JewelSlider from \"../Components/JewelSlider\";\nimport ProductCard from \"../Components/productCard\";\n\nconst HomePage = () => {\n  // const [jewel, setJewel] = useState({});\n  const [jewels, setJewels] = useState([]);\n  // const [superJewels, setSuperJewels] = useState([]);\n  // const [vipJewels, setVipJewels] = useState([]);\n  // const [defaultJewels, setDefaultJewels] = useState([]);\n  const [pieces, setPieces] = useState(null);\n  const [metals, setMetals] = useState(null);\n  const [stones, setStones] = useState(null);\n  const [checkboxStates, setCheckboxStates] = useState({});\n  const [showAllItems, setShowAllItems] = useState(false);\n  // const [isFiltered, setIsFiltered] = useState(0);\n\n  useEffect(() => {\n    // handleGetJewel();\n    handleGetJewels();\n    handleGetPieces();\n    handleGetMetals();\n    handleGetStones();\n    // handleGetSuperJewels();\n    // handleGetVipJewels();\n    // handleGetDefaultJewels();\n  }, []);\n\n  // const handleGetJewel = async () => {\n  //   let jewelObject = await getJewel();\n  //   setJewel(jewelObject);\n  // };\n\n  const handleGetJewels = async () => {\n    let jewelData = await getJewels();\n    let actives = jewelData.filter((object) => object.expired === false);\n    setJewels(actives);\n  };\n\n  // const handleGetSuperJewels = async () => {\n  //   let jewelData = await getSuperJewels();\n  //   setSuperJewels(jewelData);\n  // };\n\n  // const handleGetVipJewels = async () => {\n  //   let jewelData = await getVipJewels();\n  //   setVipJewels(jewelData);\n  // };\n\n  // const handleGetDefaultJewels = async () => {\n  //   let jewelData = await getDefaultJewels();\n  //   setDefaultJewels(jewelData);\n  // };\n\n  const handleGetPieces = async () => {\n    let piecesData = await getPieces();\n    setPieces(piecesData);\n  };\n\n  const handleGetStones = async () => {\n    let stonesData = await getStones();\n    setStones(stonesData);\n  };\n\n  const handleGetMetals = async () => {\n    let metalsData = await getMetals();\n    setMetals(metalsData);\n  };\n\n  const handlePieceSelect = async (piece) => {\n    let jewelArr = await getJewels();\n    let newPieceArr = jewelArr.filter((item) => {\n      return item.piece._id === piece._id;\n    });\n    setJewels(newPieceArr);\n  };\n\n  const handleMetalSelect = async (metal) => {\n    let jewelArr = await getJewels();\n    let newMetalArr = jewelArr.filter((item) => {\n      return item.metal._id === metal._id;\n    });\n    setJewels(newMetalArr);\n  };\n\n  const handleStoneSelect = async (stone) => {\n    let jewelArr = await getJewels();\n    let newStoneArr = jewelArr.filter((item) => {\n      return item.stone._id === stone._id;\n    });\n    setJewels(newStoneArr);\n  };\n\n  const checkboxChange = (item, title) => (event) => {\n    setCheckboxStates({ ...checkboxStates, [item._id]: event.target.checked });\n    switch (title) {\n      case \"ნაკეთობა\":\n        handlePieceSelect(item);\n        setShowAllItems(!showAllItems);\n        break;\n      case \"მასალა\":\n        handleMetalSelect(item);\n        setShowAllItems(!showAllItems);\n        break;\n      case \"შიგთავსი\":\n        handleStoneSelect(item);\n        setShowAllItems(!showAllItems);\n        break;\n      default:\n        break;\n    }\n  };\n  const handleSearchByName = async (symbols) => {\n    let demoJewels = await getJewels();\n    let filtered = demoJewels.filter((item) => {\n      return item.name.toLowerCase().includes(symbols.toLowerCase());\n    });\n    setJewels(filtered, \"filtered\");\n    // setShowAllItems(!showAllItems);\n    // setIsFiltered(filtered.length);\n  };\n\n  return (\n    <div className=\"homepage-main-container\">\n      <div className=\"filter-section\">\n        <Filter\n          items={metals}\n          title={\"მასალა\"}\n          checkboxStates={checkboxStates}\n          onItemSelect={checkboxChange}\n        />\n        <Filter\n          items={pieces}\n          title={\"ნაკეთობა\"}\n          checkboxStates={checkboxStates}\n          onItemSelect={checkboxChange}\n        />\n        <Filter\n          items={stones}\n          title={\"შიგთავსი\"}\n          checkboxStates={checkboxStates}\n          onItemSelect={checkboxChange}\n        />\n      </div>\n      <div className=\"homepage-content\">\n        <div className=\"advertising-component\">\n          <SearchBar onChange={handleSearchByName} />\n          <AdSlider />\n          <>\n            <Pagination jewels={jewels} itemsPerPage={8} />\n          </>\n\n          {/* {jewels.map((jewel) => (\n            <>\n              {jewel.expired === false && (\n                <Pagination jewels={jewels} itemsPerPage={8} />\n              )}\n            </>\n          ))} */}\n        </div>\n\n        {/* {jewels.length > 0 && (\n          <JewelSlider show={4}>\n            {jewels.map((jewel) => (\n              <>{jewel.type.name === \"VIP\" && <ProductCard jewel={jewel} />}</>\n            ))}\n          </JewelSlider>\n        )} */}\n\n        {/* {showAllItems && (\n          <div>\n            {jewels.length != 0 && (\n              <>\n                <Pagination jewels={jewels} itemsPerPage={8} />\n              </>\n            )}\n          </div>\n        )} */}\n      </div>\n      <div>\n        <div className=\"right\">\n          <span className=\"right\">რეკლამის ბანერი</span>\n        </div>\n        <div className=\"right\">\n          <span className=\"right\">რეკლამის ბანერი</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n","/home/e_tabidze/Documents/React/project-ge-frontend/src/Pages/terms.jsx",[],"/home/e_tabidze/Documents/React/project-ge-frontend/src/Pages/jewelPage.jsx",["139"],"import React, { useState, useEffect } from \"react\";\nimport { getJewel, getSimilarJewels } from \"../Services/APIEndpoints\";\nimport \"../CSS/jewelPage.css\";\nimport ProductCard from \"../Components/productCard\";\n// import JewelImageSlider from \"../Components/jewelImageSlider\";\n\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\nimport MagicSliderDots from \"react-magic-slider-dots\";\nimport \"react-magic-slider-dots/dist/magic-dots.css\";\n\nconst JewelPage = () => {\n  const [jewel, setJewel] = useState(null);\n  const [similarJewels, setSimilarJewels] = useState(null);\n  useEffect(() => {\n    handleGetJewel();\n  }, []);\n\n  useEffect(() => {\n    if (jewel) {\n      handleGetSimilarJewels();\n    }\n  }, [jewel]);\n\n  const settings = {\n    dots: true,\n    arrows: true,\n    // autoplay: true,\n    autoplaySpeed: 2000,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n\n    appendDots: (dots) => {\n      return (\n        <MagicSliderDots\n          dots={dots}\n          numDotsToShow={4}\n          dotWidth={30}\n          className=\"dots\"\n        />\n      );\n    },\n  };\n\n  const handleGetJewel = async () => {\n    let jewelId = window.location.pathname.split(\"/\")[2];\n    let jewel = await getJewel(jewelId);\n    setJewel(jewel);\n  };\n\n  const handleGetSimilarJewels = async () => {\n    let data = await getSimilarJewels(jewel.piece._id);\n    setSimilarJewels(data);\n  };\n\n  return (\n    <div>\n      <div className=\"jewel-page-ad\">განათავსეთ თქვენი რეკლამა 100x1200</div>\n      <div className=\"jewelPage-main-container\">\n        <div className=\"imageSide\">\n          {/* {jewel &&\n            jewel.productImage.map((img) => {\n              return (\n                // <img\n                //   className=\"main-image\"\n                //   src={jewel && `http://localhost:3000/${img}`}\n                // />\n                <JewelImageSlider\n                  images={img}\n                  jewel={jewel}\n                  // src={`http://localhost:3000/${img}`}\n                />\n              );\n            })} */}\n          {/* <JewelImageSlider jewel={jewel} /> */}\n          <Slider className=\"slider\" {...settings} style={{ width: \"500px\" }}>\n            {jewel &&\n              jewel.productImage.map((img, index) => (\n                <div key={index}>\n                  <img\n                    className=\"bannerImage\"\n                    src={jewel && `http://localhost:3000/${img}`}\n                    alt=\"project-ge\"\n                  />\n                </div>\n              ))}\n          </Slider>\n        </div>\n        <div className=\"descriptionSide\">\n          <div className=\"jewelpage-name\"> {jewel && jewel.name} </div>\n          <div className=\"jewelpage-price\">{jewel && jewel.price} ლარი</div>\n          <div className=\"jewelpage-phone\">{jewel && jewel.contactNumber}</div>\n          <div className=\"productdescitle\">პროდუქტის აღწერა</div>\n          <div className=\"separator\"></div>\n          <div className=\"jewelpage-description\">\n            {jewel && jewel.description}\n          </div>\n          <div className=\"productdescitle\">სპეციფიკაციები</div>\n          <div className=\"separator\"></div>\n          <table>\n            <tr>\n              <td>ნაკეთობა:</td>\n              <td>{jewel && jewel.piece.name}</td>\n            </tr>\n            <tr>\n              <td> მასალა: </td>\n              <td>{jewel && jewel.metal.name} </td>\n            </tr>\n            <tr>\n              <td>სინჯი:</td>\n              <td>{jewel && jewel.standard} </td>\n            </tr>\n            <tr>\n              <td>ზომა:</td>\n              <td>{jewel && jewel.size}</td>\n            </tr>\n            <tr>\n              <td>წონა:</td>\n              <td>{jewel && jewel.weight}</td>\n            </tr>\n            <tr>\n              <td> ძვირფასი ქვა: </td>\n              <td>{jewel && jewel.stone.name} </td>\n            </tr>\n            {/* <tr>\n              <td> განცხადების ტიპი: </td>\n              <td>{jewel && jewel.type.name} </td>\n            </tr> */}\n          </table>\n          <div className=\"separator\"></div>\n        </div>\n      </div>\n      <div className=\"jewel-page-ad\">განათავსეთ თქვენი რეკლამა 100x1200</div>\n\n      <div className=\"similar-prod-title\">მსგავსი პროდუქტები</div>\n\n      <div className=\"similar-products\">\n        {similarJewels &&\n          similarJewels.map((jewel) => {\n            return <ProductCard key={jewel._id} jewel={jewel} />;\n          })}\n      </div>\n      <div className=\"jewel-page-ad\">განათავსეთ თქვენი რეკლამა 100x1200</div>\n    </div>\n  );\n};\n\nexport default JewelPage;\n","/home/e_tabidze/Documents/React/project-ge-frontend/src/Pages/userPage.jsx",["140"],"import React, { useState, useEffect } from \"react\";\nimport { getUserJewels } from \"../Services/APIEndpoints\";\nimport NewProductModal from \"../Components/newProductModal\";\nimport MyProduct from \"../Components/myProduct\";\n\nimport \"../CSS/userPage.css\";\n\nconst UserPage = ({ currentUser }) => {\n  const [newProductModalActive, setNewProductModalActive] = useState(false);\n  const [userJewels, setUserJewels] = useState([]);\n\n  useEffect(() => {\n    handleGetUserJewels();\n  }, []);\n\n  const handleGetUserJewels = async () => {\n    let jewelData = await getUserJewels(currentUser._id);\n    setUserJewels(jewelData.data);\n  };\n\n  const handleNewProductModalToggle = () => {\n    setNewProductModalActive(!newProductModalActive);\n  };\n\n  return (\n    <div className=\"userpage-main-container\">\n      <div>რეკლამა აქ </div>\n      <div className=\"content\">\n        <div>რეკლამა</div>\n        <div className=\"user-settings\">\n          <div className=\"options\">\n            {newProductModalActive && (\n              <>\n                <div className=\"newProductModal\">\n                  <NewProductModal\n                    handleNewProductModalToggle={handleNewProductModalToggle}\n                    currentUser={currentUser}\n                  />\n                </div>\n              </>\n            )}\n          </div>\n          <div className=\"textUser\">\n            მომხმარებლის სახელი: {currentUser.name}\n          </div>\n          <div className=\"textUser\">\n            მომხმარებლის იმეილი: {currentUser.email}\n          </div>\n          <div className=\"title\">\n            <p> ჩემი განცხადებები</p>\n          </div>\n          <div className='addButton' onClick={handleNewProductModalToggle}>\n            <i class=\"fa fa-plus\" /> {\" \"} ახალი განცხადების დამატება\n          </div>\n          <div>\n            {userJewels &&\n              userJewels.map((jewel, index) => {\n                return (\n                  <MyProduct\n                    key={index}\n                    jewel={jewel}\n                    userJewels={userJewels}\n                    setUserJewels={setUserJewels}\n                    getUserJewels={getUserJewels}\n                  />\n                );\n              })}\n          </div>\n        </div>\n      </div>\n      <div>რეკლამა</div>\n    </div>\n  );\n};\n\nexport default UserPage;\n","/home/e_tabidze/Documents/React/project-ge-frontend/src/Services/httpService.js",["141"],"import axios from \"axios\";\nimport logger from \"./logService\";\nimport { toast } from \"react-toastify\";\n\naxios.interceptors.response.use(null, (error) => {\n  const expectedError =\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.status < 500;\n\n  if (!expectedError) {\n    logger.log(error);\n    toast.error(\"An unexpected error occurrred.\");\n  }\n\n  return Promise.reject(error);\n});\n\nconst setJwt = (jwt) => {\n  return axios.defaults.headers.common[\"x-auth-token\"] = jwt;\n};\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete,\n  setJwt,\n};\n","/home/e_tabidze/Documents/React/project-ge-frontend/src/Components/dropdownMenu.jsx",[],"/home/e_tabidze/Documents/React/project-ge-frontend/src/Components/accountModal.jsx",[],"/home/e_tabidze/Documents/React/project-ge-frontend/src/Components/adSlider.jsx",[],"/home/e_tabidze/Documents/React/project-ge-frontend/src/Components/pagination.jsx",["142","143","144","145","146","147"],"import React, { useState } from \"react\";\nimport ProductCard from \"./productCard\";\n\nimport \"../CSS/pagination.css\";\n\nconst Pagination = ({ jewels, itemsPerPage }) => {\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const [pageNumberLimit, setPageNumberLimit] = useState(5);\n  const [maxPageNumberLimit, setMaxPageNumberLimit] = useState(5);\n  const [minPageNumberLimit, setMinPageNumberLimit] = useState(0);\n\n  const pages = [];\n\n  for (let i = 1; i <= Math.ceil(jewels && jewels.length / itemsPerPage); i++) {\n    pages.push(i);\n  }\n\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentItems =\n    jewels.length != 0 ? jewels.slice(indexOfFirstItem, indexOfLastItem) : null;\n\n  const handleClick = (e) => {\n    setCurrentPage(Number(e.target.id));\n  };\n\n  const renderData = () => {\n    return (\n      <div className=\"product-section\">\n        {currentItems.sort().map((jewel) => {\n          return <ProductCard key={jewel._id} jewel={jewel} />;\n        })}\n      </div>\n    );\n  };\n\n  const renderPageNumbers = pages.map((number) => {\n    if (number < maxPageNumberLimit + 1 && number > minPageNumberLimit) {\n      return (\n        <li\n          key={number}\n          id={number}\n          onClick={handleClick}\n          className={currentPage == number ? \"active\" : null}\n        >\n          {number}\n        </li>\n      );\n    } else {\n      return null;\n    }\n  });\n\n  const handleNexbtn = () => {\n    setCurrentPage(currentPage + 1);\n    if (currentPage + 1 > maxPageNumberLimit) {\n      setMaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit);\n      setMinPageNumberLimit(minPageNumberLimit + pageNumberLimit);\n    }\n  };\n\n  const handlePrevbtn = () => {\n    setCurrentPage(currentPage - 1);\n    if ((currentPage - 1) % pageNumberLimit == 0) {\n      setMaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit);\n      setMinPageNumberLimit(minPageNumberLimit - pageNumberLimit);\n    }\n  };\n\n  let pageIncrementbtn = null;\n  if (pages.length > maxPageNumberLimit) {\n    pageIncrementbtn = <li onClick={handleNexbtn}> &hellip; </li>;\n  }\n\n  let pageDecrementbtn = null;\n  if (pages.length > maxPageNumberLimit) {\n    pageDecrementbtn = <li onClick={handlePrevbtn}> &hellip; </li>;\n  }\n\n  return (\n    <div className=\"pagination-container-wrapper\">\n      <ul>{currentItems ? renderData() : null}</ul>\n      <ul className=\"pagenumbers\">\n        <li>\n          <button\n            className=\"buttonnav\"\n            onClick={handlePrevbtn}\n            disabled={currentPage == pages[0] ? true : false}\n          >\n            <i className=\"fa fa-angle-double-left fa-2x\" />\n          </button>\n        </li>\n        {pageDecrementbtn}\n        {renderPageNumbers}\n        {pageIncrementbtn}\n        <li>\n          <button\n            className=\"buttonnav\"\n            onClick={handleNexbtn}\n            disabled={currentPage == pages[pages.length - 1] ? true : false}\n          >\n            <i className=\"fa fa-angle-double-right fa-2x\" />\n          </button>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Pagination;\n","/home/e_tabidze/Documents/React/project-ge-frontend/src/Components/myProduct.jsx",[],"/home/e_tabidze/Documents/React/project-ge-frontend/src/Components/newProductModal.jsx",["148","149","150","151","152","153","154","155","156","157","158","159"],"import React, { useEffect, useState } from \"react\";\nimport {\n  getMetals,\n  getPieces,\n  getStones,\n  // getTypes,\n  postJewels,\n} from \"../Services/APIEndpoints\";\nimport Joi from \"joi-browser\";\nimport Button from \"../Reusable components/button\";\nimport ImageField from \"../Reusable components/imgField\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport {\n  TextField,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n} from \"@material-ui/core\";\n\nimport \"../CSS/newProductModal.css\";\n\nconst NewProductModal = ({ handleNewProductModalToggle, currentUser }) => {\n  const [pieces, setPieces] = useState(null);\n  const [metals, setMetals] = useState(null);\n  const [stones, setStones] = useState(null);\n  // const [types, setTypes] = useState(null);\n  const [newJewel, setNewJewel] = useState({\n    // duration: \"\",\n    name: \"\",\n    pieceId: \"\",\n    price: \"\",\n    metalId: \"\",\n    stoneId: \"\",\n    weight: \"\",\n    size: \"\",\n    standard: \"\",\n    contactPerson: \"\",\n    contactNumber: \"\",\n    description: \"\",\n    productImage: {},\n    // typeId: \"\",\n  });\n  const [errors, setErrors] = useState({\n    name: \"\",\n    pieceId: \"\",\n    price: \"\",\n    metalId: \"\",\n    stoneId: \"\",\n    weight: \"\",\n    size: \"\",\n    standard: \"\",\n    contactPerson: \"\",\n    contactNumber: \"\",\n    description: \"\",\n    productImage: \"\",\n    // typeId: \"\",\n  });\n\n  useEffect(() => {\n    handleGetPieces();\n    handleGetMetals();\n    handleGetStones();\n    // handleGetTypes();\n  }, []);\n\n  const schema = {\n    // duration: Joi.number()\n    //   .max(100)\n    //   .default(30)\n    //   .label(\"ხანგრძლივობა\"),\n    name: Joi.string().required().max(100).label(\"დასახელება\"),\n    pieceId: Joi.string().required().max(50).label(\"ნაკეთობა\"),\n    price: Joi.number().required().max(10000).label(\"ფასი\"),\n    metalId: Joi.string().max(50).label(\"მეტალი\"),\n    stoneId: Joi.string().max(50).label(\"შიგთავსი\"),\n    weight: Joi.number().max(10000).label(\"წონა\"),\n    size: Joi.string().max(100).label(\"ზომა\"),\n    standard: Joi.string().max(10000).label(\"სინჯი\"),\n    contactNumber: Joi.string().label(\"საკონტაქტო ნომერი\"),\n    contactPerson: Joi.string().label(\"საკონტაქტი პირი\"),\n    description: Joi.string().max(512).label(\"ნივთის აღწერა\"),\n    productImage: Joi.any(),\n    // typeId: Joi.string().required(),\n  };\n\n  const handleGetPieces = async () => {\n    let piecesData = await getPieces();\n    setPieces(piecesData);\n  };\n\n  const handleGetMetals = async () => {\n    let metalsData = await getMetals();\n    setMetals(metalsData);\n  };\n\n  const handleGetStones = async () => {\n    let stonesData = await getStones();\n    setStones(stonesData);\n  };\n\n  // const handleGetTypes = async () => {\n  //   let typesData = await getTypes();\n  //   setTypes(typesData);\n  // };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    let errorMessage = validateProperty({ name, value });\n\n    if (errorMessage)\n      setErrors((prevState) => ({\n        ...prevState,\n        [name]: errorMessage,\n      }));\n    else\n      setErrors((prevState) => ({\n        ...prevState,\n        [name]: null,\n      }));\n    if (name === \"productImage\") {\n      setNewJewel((prevState) => ({\n        ...prevState,\n        [name]: e.target.files,\n      }));\n    } else {\n      setNewJewel((prevState) => ({\n        ...prevState,\n        [name]: value,\n      }));\n    }\n  };\n\n  const validate = () => {\n    const result = Joi.validate(newJewel, schema, { abortEarly: false });\n\n    if (!result.error) return null;\n\n    const errors = {};\n    for (let item of result.error.details) errors[item.path[0]] = item.message;\n\n    return errors;\n  };\n\n  const validateProperty = ({ name, value }) => {\n    let obj = { [name]: value };\n    let demoSchema = { [name]: schema[name] };\n\n    const { error } = Joi.validate(obj, demoSchema);\n    if (error && error.details.length === 2) {\n      return error.details[1].message;\n    } else {\n      return error ? error.details[0].message : null;\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const demoErrors = validate();\n    setErrors((prevState) => ({\n      ...prevState,\n      // [\"duration\"]: demoErrors ? demoErrors.duration : null,\n      [\"name\"]: demoErrors ? demoErrors.name : null,\n      [\"pieceId\"]: demoErrors ? demoErrors.piece : null,\n      [\"price\"]: demoErrors ? demoErrors.price : null,\n      [\"metalId\"]: demoErrors ? demoErrors.metal : null,\n      [\"stoneId\"]: demoErrors ? demoErrors.stone : null,\n      [\"weight\"]: demoErrors ? demoErrors.weight : null,\n      [\"size\"]: demoErrors ? demoErrors.size : null,\n      [\"standard\"]: demoErrors ? demoErrors.standard : null,\n      [\"contactNumber\"]: demoErrors ? demoErrors.contactNumber : null,\n      [\"contactPerson\"]: demoErrors ? demoErrors.contactPerson : null,\n      [\"description\"]: demoErrors ? demoErrors.description : null,\n      [\"productImage\"]: demoErrors ? demoErrors.productImage : null,\n      // [\"typeId\"]: demoErrors ? demoErrors.type : null,\n    }));\n    if (demoErrors) console.log(demoErrors, \"demoerrors\", newJewel);\n    else {\n      let userToken = localStorage.getItem(\"token\");\n\n      let jewelFormData = objectToFormData(newJewel);\n      console.log(newJewel);\n      postJewels(jewelFormData, userToken);\n    }\n  };\n\n  const objectToFormData = (obj) => {\n    let fd = new FormData();\n    for (let item in obj) {\n      if (item === \"productImage\") {\n        for (const key of Object.keys(obj[item])) {\n          fd.append(item, obj[item][key]);\n        }\n      } else {\n        fd.append(item, obj[item]);\n      }\n    }\n    return fd;\n  };\n\n  return (\n    <div className=\"new-product-modal-container\">\n      <div className=\"new-product-modal-wrapper\">\n        <div className=\"closeIconWrapper\">\n          <CloseIcon\n            className=\"newproductmodalclose\"\n            onClick={handleNewProductModalToggle}\n          />\n        </div>\n        <span className=\"newjeweltitle\">ახალი განცხდების დამატება:</span>\n        <form onSubmit={handleSubmit}>\n          <div className=\"new-product-form\">\n            <div className=\"inner-blocks\">\n              <TextField\n                required\n                className=\"input-form\"\n                name=\"name\"\n                value={newJewel.name}\n                onChange={handleChange}\n                label=\"დასახელება\"\n                size=\"small\"\n                variant=\"outlined\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n              {errors.name && <span>{errors.name}</span>}\n              <FormControl>\n                <InputLabel>ნაკეთობა</InputLabel>\n                {pieces && (\n                  <Select\n                    name={\"pieceId\"}\n                    label={\"ნაკეთობა\"}\n                    value={newJewel.pieceId}\n                    onChange={handleChange}\n                    variant=\"outlined\"\n                  >\n                    {pieces.map((piece) => {\n                      return (\n                        <MenuItem\n                          key={piece._id}\n                          value={piece._id}\n                          error={errors.pieceId}\n                        >\n                          {piece.name}\n                        </MenuItem>\n                      );\n                    })}\n                  </Select>\n                )}\n              </FormControl>\n              <FormControl>\n                <InputLabel>ძვირფასი მეტალი</InputLabel>\n                {metals && (\n                  <Select\n                    name={\"metalId\"}\n                    label={\"ძვირფასი მეტალი\"}\n                    value={newJewel.metalId}\n                    onChange={handleChange}\n                    variant=\"outlined\"\n                  >\n                    {metals.map((metal) => {\n                      return (\n                        <MenuItem\n                          key={metal._id}\n                          value={metal._id}\n                          error={errors.metalId}\n                        >\n                          {metal.name}\n                        </MenuItem>\n                      );\n                    })}\n                  </Select>\n                )}\n              </FormControl>\n              <TextField\n                className=\"input-form\"\n                name=\"standard\"\n                value={newJewel.standard}\n                onChange={handleChange}\n                label={\"სინჯი\"}\n                // error={errors.standard}\n                size=\"small\"\n                variant=\"outlined\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n              {errors.standard && <span>{errors.standard}</span>}\n\n              <FormControl>\n                <InputLabel>შიგთავსი</InputLabel>\n                {stones && (\n                  <Select\n                    name={\"stoneId\"}\n                    label={\"ძვირფასი მეტალი\"}\n                    value={newJewel.stoneId}\n                    onChange={handleChange}\n                    variant=\"outlined\"\n                  >\n                    {stones.map((stone) => {\n                      return (\n                        <MenuItem\n                          key={stone._id}\n                          value={stone._id}\n                          error={errors.stoneId}\n                        >\n                          {stone.name}\n                        </MenuItem>\n                      );\n                    })}\n                  </Select>\n                )}\n              </FormControl>\n             \n              {errors.size && <span>{errors.size}</span>}\n            </div>\n            <div className=\"inner-blocks\">\n              {/* <TextField\n                className=\"input-form\"\n                name=\"duration\"\n                value={newJewel.duration}\n                onChange={handleChange}\n                label=\"ხანგრძლივობა (დღეები) \"\n                // error={errors.duration}\n                size=\"small\"\n                variant=\"outlined\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n              {errors.duration && <span>{errors.duration}</span>} */}\n               <TextField\n                className=\"input-form\"\n                name=\"weight\"\n                value={newJewel.weight}\n                onChange={handleChange}\n                label={\"წონა (გრამი)\"}\n                // error={errors.weight}\n                size=\"small\"\n                variant=\"outlined\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n              {errors.weight && <span>{errors.weight}</span>}\n\n              <TextField\n                className=\"input-form\"\n                name=\"size\"\n                value={newJewel.size}\n                onChange={handleChange}\n                label={\"ზომა\"}\n                // error={errors.size}\n                size=\"small\"\n                variant=\"outlined\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n\n              <TextField\n                required\n                className=\"input-form\"\n                name=\"price\"\n                value={newJewel.price}\n                onChange={handleChange}\n                label={\"ფასი\"}\n                // error={errors.price}\n                size=\"small\"\n                variant=\"outlined\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n              {errors.price && <span>{errors.price}</span>}\n\n              <span>საკონტაქტო პირი:</span>\n              <TextField\n                className=\"input-form\"\n                name=\"contactPerson\"\n                value={newJewel.contactPerson}\n                onChange={handleChange}\n                label={\"სახელი\"}\n                // error={errors.contactNumber}\n                size=\"small\"\n                variant=\"outlined\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n              {errors.contactPerson && <span>{errors.contactPerson}</span>}\n\n              <TextField\n                className=\"input-form\"\n                name=\"contactNumber\"\n                value={newJewel.contactNumber}\n                onChange={handleChange}\n                label={\"საკონტაქტო ნომერი\"}\n                // error={errors.contactNumber}\n                size=\"small\"\n                variant=\"outlined\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n              {errors.contactNumber && <span>{errors.contactNumber}</span>}\n              {/* \n              <FormControl>\n                <InputLabel>განცხადების ტიპი</InputLabel>\n                {types && (\n                  <Select\n                    name={\"typeId\"}\n                    label={\"განცხადების ტიპი\"}\n                    value={newJewel.typeId}\n                    onChange={handleChange}\n                    variant=\"outlined\"\n                  >\n                    {types.map((type) => {\n                      return (\n                        <MenuItem\n                          key={type._id}\n                          value={type._id}\n                          error={errors.typeId}\n                        >\n                          {type.name}\n                        </MenuItem>\n                      );\n                    })}\n                  </Select>\n                )}\n              </FormControl> */}\n            </div>\n          </div>\n\n          <div className=\"descriptionSection\">\n            <ImageField onChange={handleChange} />\n\n            <TextField\n              fullWidth\n              className=\"input-form description\"\n              style={{ height: \"100px\" }}\n              name=\"description\"\n              value={newJewel.description}\n              onChange={handleChange}\n              label=\"ნივთის აღწერა\"\n              size=\"medium\"\n              variant=\"outlined\"\n              rows={12}\n              InputLabelProps={{\n                shrink: true,\n              }}\n              inputProps={{\n                maxLength: 512,\n                style: {\n                  height: \"100px\",\n                },\n              }}\n              helperText=\"მაქსიმუმ 512 სიმბოლო\"\n            />\n            {errors.description && <span>{errors.description}</span>}\n          </div>\n\n          <Button\n            className=\"new-product-submit\"\n            label={\"ახალი პროდუქტის დამატება\"}\n            onClick={handleSubmit}\n            // disabled={validate()}\n          />\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default NewProductModal;\n","/home/e_tabidze/Documents/React/project-ge-frontend/src/Reusable components/searchBar.jsx",[],"/home/e_tabidze/Documents/React/project-ge-frontend/src/Reusable components/menuItem.jsx",[],"/home/e_tabidze/Documents/React/project-ge-frontend/src/Reusable components/button.jsx",[],"/home/e_tabidze/Documents/React/project-ge-frontend/src/Reusable components/filter.jsx",[],"/home/e_tabidze/Documents/React/project-ge-frontend/src/Services/logService.js",["160"],"// import Raven from \"raven-js\";\n\nfunction init() {\n  //   Raven.config(\n  //     \"https://48a86b2e18a44e048325aaf9fe2dc1a0@o422197.ingest.sentry.io/5345351\",\n  //     { release: \"1-0-0\", environment: \"development\" }\n  //   ).install();\n}\n\nfunction log(error) {}\n\nexport default {\n  init,\n  log,\n};\n","/home/e_tabidze/Documents/React/project-ge-frontend/src/Components/loginForm.jsx",["161","162","163","164","165"],"/home/e_tabidze/Documents/React/project-ge-frontend/src/Reusable components/divider.jsx",[],"/home/e_tabidze/Documents/React/project-ge-frontend/src/Components/registerForm.jsx",["166","167","168","169","170","171","172"],"/home/e_tabidze/Documents/React/project-ge-frontend/src/Components/productCard.jsx",[],"/home/e_tabidze/Documents/React/project-ge-frontend/src/Components/confirmModal.jsx",[],"/home/e_tabidze/Documents/React/project-ge-frontend/src/Reusable components/imgField.jsx",[],"/home/e_tabidze/Documents/React/project-ge-frontend/src/Reusable components/input.jsx",["173"],"import React from \"react\";\n\nimport \"../CSS/input.css\";\n\nconst Input = ({\n  name,\n  value,\n  onChange,\n  type,\n  placeholder,\n  error,\n  autoFocus,\n  className,\n  label,\n}) => {\n  return (\n    <div className={ label ? \"input-container\" : \"\"}>\n      {label && <div className=\"label\"> {label} </div>}\n      <div className={label ? \"input-field\" : \"\"} >\n        <input\n          className=\"input-form\"\n          className={className}\n          value={value}\n          name={name}\n          id={name}\n          onChange={onChange}\n          type={type}\n          autoFocus={autoFocus}\n          placeholder={placeholder}\n        />\n        {error && <div>{error}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default Input;\n","/home/e_tabidze/Documents/React/project-ge-frontend/src/Components/JewelSlider.jsx",[],"/home/e_tabidze/Documents/React/project-ge-frontend/src/Components/jewelImageSlider.jsx",[],{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","severity":1,"message":"179","line":18,"column":8,"nodeType":"180","messageId":"181","endLine":18,"endColumn":19},{"ruleId":"178","severity":1,"message":"182","line":19,"column":8,"nodeType":"180","messageId":"181","endLine":19,"endColumn":19},{"ruleId":"183","severity":1,"message":"184","line":25,"column":6,"nodeType":"185","endLine":25,"endColumn":13,"suggestions":"186"},{"ruleId":"183","severity":1,"message":"187","line":14,"column":6,"nodeType":"185","endLine":14,"endColumn":8,"suggestions":"188"},{"ruleId":"189","severity":1,"message":"190","line":23,"column":1,"nodeType":"191","endLine":29,"endColumn":3},{"ruleId":"178","severity":1,"message":"192","line":9,"column":27,"nodeType":"180","messageId":"181","endLine":9,"endColumn":45},{"ruleId":"193","severity":1,"message":"194","line":22,"column":19,"nodeType":"195","messageId":"196","endLine":22,"endColumn":21},{"ruleId":"193","severity":1,"message":"197","line":45,"column":34,"nodeType":"195","messageId":"196","endLine":45,"endColumn":36},{"ruleId":"193","severity":1,"message":"197","line":65,"column":45,"nodeType":"195","messageId":"196","endLine":65,"endColumn":47},{"ruleId":"193","severity":1,"message":"197","line":89,"column":35,"nodeType":"195","messageId":"196","endLine":89,"endColumn":37},{"ruleId":"193","severity":1,"message":"197","line":101,"column":35,"nodeType":"195","messageId":"196","endLine":101,"endColumn":37},{"ruleId":"198","severity":1,"message":"199","line":163,"column":7,"nodeType":"200","messageId":"201","endLine":163,"endColumn":52,"fix":"202"},{"ruleId":"198","severity":1,"message":"203","line":164,"column":7,"nodeType":"200","messageId":"201","endLine":164,"endColumn":56,"fix":"204"},{"ruleId":"198","severity":1,"message":"205","line":165,"column":7,"nodeType":"200","messageId":"201","endLine":165,"endColumn":54,"fix":"206"},{"ruleId":"198","severity":1,"message":"207","line":166,"column":7,"nodeType":"200","messageId":"201","endLine":166,"endColumn":56,"fix":"208"},{"ruleId":"198","severity":1,"message":"209","line":167,"column":7,"nodeType":"200","messageId":"201","endLine":167,"endColumn":56,"fix":"210"},{"ruleId":"198","severity":1,"message":"211","line":168,"column":7,"nodeType":"200","messageId":"201","endLine":168,"endColumn":56,"fix":"212"},{"ruleId":"198","severity":1,"message":"213","line":169,"column":7,"nodeType":"200","messageId":"201","endLine":169,"endColumn":52,"fix":"214"},{"ruleId":"198","severity":1,"message":"215","line":170,"column":7,"nodeType":"200","messageId":"201","endLine":170,"endColumn":60,"fix":"216"},{"ruleId":"198","severity":1,"message":"217","line":171,"column":7,"nodeType":"200","messageId":"201","endLine":171,"endColumn":70,"fix":"218"},{"ruleId":"198","severity":1,"message":"219","line":172,"column":7,"nodeType":"200","messageId":"201","endLine":172,"endColumn":70,"fix":"220"},{"ruleId":"198","severity":1,"message":"221","line":173,"column":7,"nodeType":"200","messageId":"201","endLine":173,"endColumn":66,"fix":"222"},{"ruleId":"198","severity":1,"message":"223","line":174,"column":7,"nodeType":"200","messageId":"201","endLine":174,"endColumn":68,"fix":"224"},{"ruleId":"189","severity":1,"message":"190","line":12,"column":1,"nodeType":"191","endLine":15,"endColumn":3},{"ruleId":"198","severity":1,"message":"225","line":65,"column":7,"nodeType":"200","messageId":"201","endLine":65,"endColumn":54,"fix":"226"},{"ruleId":"198","severity":1,"message":"227","line":66,"column":7,"nodeType":"200","messageId":"201","endLine":66,"endColumn":60,"fix":"228"},{"ruleId":"193","severity":1,"message":"197","line":75,"column":45,"nodeType":"195","messageId":"196","endLine":75,"endColumn":47},{"ruleId":"198","severity":1,"message":"225","line":78,"column":11,"nodeType":"200","messageId":"201","endLine":78,"endColumn":38,"fix":"229"},{"ruleId":"198","severity":1,"message":"227","line":79,"column":11,"nodeType":"200","messageId":"201","endLine":79,"endColumn":41,"fix":"230"},{"ruleId":"198","severity":1,"message":"199","line":95,"column":7,"nodeType":"200","messageId":"201","endLine":95,"endColumn":52,"fix":"231"},{"ruleId":"198","severity":1,"message":"225","line":96,"column":7,"nodeType":"200","messageId":"201","endLine":96,"endColumn":54,"fix":"232"},{"ruleId":"198","severity":1,"message":"227","line":97,"column":7,"nodeType":"200","messageId":"201","endLine":97,"endColumn":60,"fix":"233"},{"ruleId":"198","severity":1,"message":"234","line":98,"column":7,"nodeType":"200","messageId":"201","endLine":98,"endColumn":74,"fix":"235"},{"ruleId":"193","severity":1,"message":"197","line":107,"column":45,"nodeType":"195","messageId":"196","endLine":107,"endColumn":47},{"ruleId":"198","severity":1,"message":"225","line":110,"column":11,"nodeType":"200","messageId":"201","endLine":110,"endColumn":38,"fix":"236"},{"ruleId":"237","severity":1,"message":"238","line":160,"column":15,"nodeType":"239","endLine":160,"endColumn":18},{"ruleId":"240","severity":1,"message":"241","line":22,"column":11,"nodeType":"242","endLine":22,"endColumn":32},"no-native-reassign",["243"],"no-negated-in-lhs",["244"],"no-unused-vars","'JewelSlider' is defined but never used.","Identifier","unusedVar","'ProductCard' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleGetSimilarJewels'. Either include it or remove the dependency array.","ArrayExpression",["245"],"React Hook useEffect has a missing dependency: 'handleGetUserJewels'. Either include it or remove the dependency array.",["246"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'setPageNumberLimit' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","no-useless-computed-key","Unnecessarily computed property [\"name\"] found.","Property","unnecessarilyComputedProperty",{"range":"247","text":"248"},"Unnecessarily computed property [\"pieceId\"] found.",{"range":"249","text":"250"},"Unnecessarily computed property [\"price\"] found.",{"range":"251","text":"252"},"Unnecessarily computed property [\"metalId\"] found.",{"range":"253","text":"254"},"Unnecessarily computed property [\"stoneId\"] found.",{"range":"255","text":"256"},"Unnecessarily computed property [\"weight\"] found.",{"range":"257","text":"258"},"Unnecessarily computed property [\"size\"] found.",{"range":"259","text":"260"},"Unnecessarily computed property [\"standard\"] found.",{"range":"261","text":"262"},"Unnecessarily computed property [\"contactNumber\"] found.",{"range":"263","text":"264"},"Unnecessarily computed property [\"contactPerson\"] found.",{"range":"265","text":"266"},"Unnecessarily computed property [\"description\"] found.",{"range":"267","text":"268"},"Unnecessarily computed property [\"productImage\"] found.",{"range":"269","text":"270"},"Unnecessarily computed property [\"email\"] found.",{"range":"271","text":"272"},"Unnecessarily computed property [\"password\"] found.",{"range":"273","text":"274"},{"range":"275","text":"272"},{"range":"276","text":"274"},{"range":"277","text":"248"},{"range":"278","text":"272"},{"range":"279","text":"274"},"Unnecessarily computed property [\"repeat_password\"] found.",{"range":"280","text":"281"},{"range":"282","text":"272"},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"283","fix":"284"},{"desc":"285","fix":"286"},[4185,4193],"\"name\"",[4238,4249],"\"pieceId\"",[4295,4304],"\"price\"",[4350,4361],"\"metalId\"",[4407,4418],"\"stoneId\"",[4464,4474],"\"weight\"",[4521,4529],"\"size\"",[4574,4586],"\"standard\"",[4635,4652],"\"contactNumber\"",[4706,4723],"\"contactPerson\"",[4777,4792],"\"description\"",[4844,4860],"\"productImage\"",[1786,1795],"\"email\"",[1841,1853],"\"password\"",[2265,2274],[2304,2316],[2477,2485],[2530,2539],[2585,2597],[2646,2665],"\"repeat_password\"",[3062,3071],"Update the dependencies array to be: [handleGetSimilarJewels, jewel]",{"range":"287","text":"288"},"Update the dependencies array to be: [handleGetUserJewels]",{"range":"289","text":"290"},[770,777],"[handleGetSimilarJewels, jewel]",[474,476],"[handleGetUserJewels]"]